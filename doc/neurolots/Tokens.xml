<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>a9cd9c26c4f195e993b534b477157b470</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>aa5f0092df27ceb0938bd7a529445b11b</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>ad3d9d189928cda1466a63763de5ab533</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>a95dcb24dc803e9d07a08a130e8ee4ee7</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>a0c4689154c3bbef92fc6212aefa97c5f</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>aaf42161ac6c812ed87326832a5e0b115</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>a7d513a40a3e6abf23906524315846472</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>a6e1ee0a624b09c2e95becf23a577fc3b</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>acf541fa6667afaafad4e695708771491</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>a806595bdec61e1b768100454db43a7a2</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGEOMETRY_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgeometry_2version_8h.html</Path>
    <Anchor>a719fd3465301948bd4994372439f017c</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a58bfbd439fd0241dcc262c1aa8160736</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>ade615003b3c296abe5f398c9ad7529db</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a852fe8714841e7bc5ed341a9edc5b676</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a06b92624e5dcc3b381d3765c28bf9931</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a76c7a26ad11513a650b39fceb3da1678</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a04a6cd1de00978c3be151a307611ab4a</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>ad22acfc64741bf9494d199b950161102</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a9a32f194712fb0fc91cca71c1a3ae51c</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>aa89aa693b37a962a29601f598dbd7222</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a29f5e5aecf31ecde981e3327e0b6bb33</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLPHYSICS_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlphysics_2version_8h.html</Path>
    <Anchor>a88495165f76ff91d87c714d140165177</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>aa24e82cceef26771e60ef02a5723a693</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>aebe757ed2b18c9220b9ea81a1ba6685c</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>ac2e8ef9b8c007992201aba08074e0885</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>a06048aa7f9ad5e3dda6ff5cb6f81eb16</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>a33da2fe2f9b019fd043f6c12e2b341b0</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>a80d1285e3820faa17147f4e9b8638694</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>a444afddf05f0a02ad6da07d25695754f</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>a94a41109376a625aac9556d62746a4d0</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>ac9e91964b31fda903ceb137988da2a1e</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>a1bd97a9f5bfbfe5a126e6438e72be146</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLGENERATOR_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlgenerator_2version_8h.html</Path>
    <Anchor>a2a9e415798cec39a34114dfeab1dcbac</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>a1a72b20da2defcbb2d6b868bcff2511a</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>a58f148092eeae8d1a2b5670a46db7b54</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>af00c0fffe7a81a9bddc09995fbe928e2</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>a4cd536fd0778d4d1296669d502f53bbb</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>a8aab8c0992448e7ea2640a0fa411a483</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>abd733acc7362aaa2c95a310b002b53e1</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>a5737a98eee50e09ab4960ca4c4429931</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>abbe085161f77ff3fe1f9763d28c96047</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>af7a02313901a214bf5fc1da067764c2f</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>a419feacc0479bf3c3e149de223203cec</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NLRENDER_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>nlrender_2version_8h.html</Path>
    <Anchor>a8044c195aa2ec957a67e2643c0b066ad</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MyPair</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>MyPair</Scope>
    </TokenIdentifier>
    <Path>class_my_pair.html</Path>
    <Abstract>Copyright (c) 2015-2017 VG-Lab/URJC. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>nlgenerator</Scope>
    </TokenIdentifier>
    <Path>namespacenlgenerator.html</Path>
    <Abstract>Copyright (c) 2015-2017 VG-Lab/URJC. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgenerator::Icosphere</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Icosphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>ad87cca8770f4e9b39affe629ea542404</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Icosphere</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>a103cd50157bb44a6949a3f8dd735dde7</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>a92da233e5c908b1ca9f430b5d39dbe12</Anchor>
    <Abstract>Method that computes the final icospehere shape. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>surface</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>a9c5ea90b720e57a92c4f340b2588a216</Anchor>
    <Abstract>Method that return the final icoshepre shape as facets. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>structure</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>a94fd72d6a00f3a18c51b4bb9a33c45e4</Anchor>
    <Abstract>Method that return the final icoshepre structure as facets. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>ac8bf55d92f3fb5fa128b964522c44591</Anchor>
    <Abstract>Icosphere center position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>aab691f1eb1c8cf4d868da1710b70beb6</Anchor>
    <Abstract>Icosphere radius. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>ac17941a9cdd4b0f3ccf74fea36751ee6</Anchor>
    <Abstract>Icosphere nodes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_surfaceNodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>ad4726cf9a2c2de1fbf89aca307e1dc70</Anchor>
    <Abstract>Icosphere surface nodes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tetrahedra</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>ad241048dd1f4a1fa884b08af84ba9d03</Anchor>
    <Abstract>Icosphere tetrahedra. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_surfaceTetrahedra</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>a1c1c25b750ccd4674b264df65605715e</Anchor>
    <Abstract>Icosphere surface tetrahedra. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_surfaceQuads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>afb91ec111cb1f959202515853aa84147</Anchor>
    <Abstract>Icosphere section quads. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_femSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Icosphere</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_icosphere.html</Path>
    <Anchor>a9a197a5ac196286038e000d69f947a39</Anchor>
    <Abstract>Finite element method system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgenerator::JointNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>JointNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>aea3bfd2626496bee9627881a31f3cb9d</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~JointNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>aaab204ed0b71dd8dffca7d7c46a38596</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>aa13c99413c7ad678541877baa4a763f4</Anchor>
    <Abstract>Method that returns the joint node position. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>adc2b2adc00cb47494f9098b811001e0e</Anchor>
    <Abstract>Method that returns the join node radius. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>connectedSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>a098ed9fd9203d1ba4456cfc38d1d4533</Anchor>
    <Abstract>Method that returns the connected soma conditional. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>ab02853b88b479035fc9e8227cebc4488</Anchor>
    <Abstract>Method that returns the corresponding section quad for each neighbour nsol node. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sectionQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>a04f9076d029f81dd2a7115d612d04609</Anchor>
    <Abstract>Method that returns the first section quad. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>a9b924c7cfc9a6860bb7a18774fd6a9e9</Anchor>
    <Abstract>Method that return the first neighbour node. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>a109a224062984038619bae36f99ed622</Anchor>
    <Abstract>Method that returns the number of neighbors of the joint node. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>ac939e058b8c3575e75d3ce8aaec6ba1f</Anchor>
    <Abstract>Method that adds a new nsol neighbour node to the joint. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeGeometry</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>a058aa94c9ea7ea4d4707434c682efc61</Anchor>
    <Abstract>Method that computes the joint node geometry. </Abstract>
    <DeclaredIn>JointNode.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>accfec60d97dd0b862f6f37a7a537b287</Anchor>
    <Abstract>Joint node position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>af3034b7803193012867ac4ba0fd32c22</Anchor>
    <Abstract>Joint node radius. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_connectedSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>a6346b7cafdf032b95d7edab0f74ab794</Anchor>
    <Abstract>Conditional that indicates if the joint node is connected to the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::JointNode</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_joint_node.html</Path>
    <Anchor>a4e8006d24245c2ff4d2d3959564011a1</Anchor>
    <Abstract>Joint node neighbour nodes. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgenerator::MeshGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgenerator::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_mesh_generator.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_mesh_generator.html</Path>
    <Anchor>a3f5b05b5f72475a97a3c598291e1626c</Anchor>
    <Abstract>Static method that return a mesh generated from the given morphology. </Abstract>
    <DeclaredIn>MeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_mesh_generator.html</Path>
    <Anchor>a0f281cc4bcb527519b0d8b2f69f75971</Anchor>
    <Abstract>Static method that return a mesh generated from the given morphology changing some morphology params...</Abstract>
    <DeclaredIn>MeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>generateStructureMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_mesh_generator.html</Path>
    <Anchor>a65cbf8152c3963ed0589e4d7827f1575</Anchor>
    <Abstract>Static method that return a structure mesh generated from the given morphology. </Abstract>
    <DeclaredIn>MeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>verticesToIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_mesh_generator.html</Path>
    <Anchor>abd49ea341a5c604dccc50630a8c7dee2</Anchor>
    <Abstract>Static method that fill the node index to vertices indices structure. </Abstract>
    <DeclaredIn>MeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>conformBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_mesh_generator.html</Path>
    <Anchor>afc11f10bfbe88ab47dae38e7cb5ae4b4</Anchor>
    <Abstract>Static method that fills the buffer with the given value for the vertices related to the given node i...</Abstract>
    <DeclaredIn>MeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgenerator::Quad</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Quad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a797ecab7d7f422d49dc627c475eccdac</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Quad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a64958e365222d2cd36e4354f07983ac2</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a888ae23ce605948c97d5e9da294c5438</Anchor>
    <Abstract>Method that returns the reference to the first node. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>aa3adc4b4f504dad75770af017e36b542</Anchor>
    <Abstract>Method that returns the reference to the second node. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a513971810c35124bf37fe79cbd8bc92e</Anchor>
    <Abstract>Method that returns the reference to the third node. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a9f9549cc5421282aec5a2c64c959348b</Anchor>
    <Abstract>Method that returns the reference to the fourth node. </Abstract>
    <DeclaredIn>Icosphere.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a5cd17891a2abdbc202ae1bd33a42f4aa</Anchor>
    <Abstract>Quad first node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a90091aeaa692cc03c1e0ad9978ca7796</Anchor>
    <Abstract>Quad second node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>a65411c7f75b0fc0a839e50e4c6b86b27</Anchor>
    <Abstract>Quad third node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgenerator::Quad</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_quad.html</Path>
    <Anchor>ae810f1eb90ed6b66ce191fffea3b5cc3</Anchor>
    <Abstract>Quad fourth node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgenerator::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Abstract>Information about the current nlgenerator version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>ac9552218ce321527733449f5b9164529</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>a019b54dd03ef9592dfad64e27c702229</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>a6822d83422467676766af3cc2e3cab68</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>a4ef6a610a0483fbef56de82ca197bb39</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>a6da1f22b56e7d28c5383ec20e16a136c</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>ad3f0ca396da8598673d68e86acd70ed5</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>a273e88243931e6556338f49f25dabd74</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>ae1e6e0cb5f81c1c28870a620776a0abd</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>a0188b19e83cd299c775ab93f371fd93c</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgenerator::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgenerator_1_1_version.html</Path>
    <Anchor>ad785a5213d5f3c73a1d1a74a27127a31</Anchor>
    <DeclaredIn>nlgenerator/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>nlgeometry</Scope>
    </TokenIdentifier>
    <Path>namespacenlgeometry.html</Path>
    <Abstract>Copyright (c) 2015-2017 VG-Lab/URJC. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::AxisAlignedBoundingBox</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AxisAlignedBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>a4685a15b2f6ed1380a9b8ed16a9e6fca</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AxisAlignedBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>ad8d4bf0e8dc446308f1293f6c7748f5c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~AxisAlignedBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>ae84bbdb7d6112d5a1df9b82d6575be03</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minimum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>a3dc86f792063d09b21ee36cf818d66cf</Anchor>
    <Abstract>Method that returns the minimum axis aligned bounding box position. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maximum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>ab93e31feec53caf698364d16a3907347</Anchor>
    <Abstract>Method that returns the maximum axis aligned bounding box position. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>a8ca32f11183ea1dc375029336545125a</Anchor>
    <Abstract>Method that computes and return the axis aligned bounding box center. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>radius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>adea98c9f01955daf4ad3a84fe798e67e</Anchor>
    <Abstract>Method that computes and return the axis aligned bounding box radius. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>a575521390fc96b0521c7da981d846ff6</Anchor>
    <Abstract>Method that expands the current bounds with the given point. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>a8e3d6dc92509e0013af1b2bf74783a9d</Anchor>
    <Abstract>Method that expands the current bounds with the given bounding box. </Abstract>
    <DeclaredIn>AxisAlignedBoundingBox.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_minimum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>aa806b880c8ef036b1d7c7282c412d925</Anchor>
    <Abstract>Left bottom back axis aligned bounding box position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_maximum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::AxisAlignedBoundingBox</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_axis_aligned_bounding_box.html</Path>
    <Anchor>ac83ab8c89ad7f30bc894a5d478d5041e</Anchor>
    <Abstract>Rigth top front axis aligned bounding box position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::Facet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Facet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>a078855e0ce6ee51bddea575ed253fa05</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Facet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>aafe84d5f4086d74f4d0d29fd307a2273</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>a766f41c6569badc037ba122f48e85a5f</Anchor>
    <Abstract>Method to get the first triangle/quad vertex pointer. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>a946a0e852ad22a7bc2e606d5862061b5</Anchor>
    <Abstract>Method to get the second triangle/quad vertex pointer. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>afc5bf1c188aab6932aec643ff3cb7622</Anchor>
    <Abstract>Method to get the third triangle/quad vertex pointer. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>adeb114695c92393afe1d210ff35e0151</Anchor>
    <Abstract>Method to get the fourth triangle/quad vertex pointer. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>af1d3c7b8b261da0379b9c2715028ead9</Anchor>
    <Abstract>Method that store the facet vertices attribs and assigns the vertices ids. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndicesAs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>a8ba610e696d74422c7a98646f67c7360</Anchor>
    <Abstract>Method that returns the facet indices stored in a vector. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addIndicesAs</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Facet</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_facet.html</Path>
    <Anchor>ae495a662ea0bd2897619983d0f190104</Anchor>
    <Abstract>Method that add the facet indices to the referenced vector. </Abstract>
    <DeclaredIn>Facet.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::Mesh</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>afed8f6f381fd1588f06b1895d92a57eb</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Mesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a294d133270efd2ec1f1c0c86924b600e</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>abaa5690dd63a1b8ddbd887152a317b51</Anchor>
    <Abstract>Method to initialize the geometric data. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a3105b3f82b13f914ffb74616f16d25b0</Anchor>
    <Abstract>Method that return the mesh vertices. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>ac770cdc94336b683ff04799a39ff5d80</Anchor>
    <Abstract>Method that return the mesh lines. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a06f8916a87d29a80d8777bf190d37342</Anchor>
    <Abstract>Method that return the mesh triangles. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>quads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>afeabb049cd868918c3046c2028e6643b</Anchor>
    <Abstract>Method that return the returns the mesh quads. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>verticesSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>abfecd4d8244d1d014d129affe3cbe431</Anchor>
    <Abstract>Method that return the uploaded vertices size. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>aaBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>afcc001811ee823ab098c5bbc4a3e01dd</Anchor>
    <Abstract>Method that returns the returns the mesh axis aligned bounding box. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a4a8aeed339e37185262e34ddd1ff170f</Anchor>
    <Abstract>Method that return the returns the mesh model matrix. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearCPUData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a3cadccbce6e88deaccedbe4699bc7c89</Anchor>
    <Abstract>Method that free the cpu geometric information of the mesh. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearGPUData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a7b0333732d986a88199a561bca491d60</Anchor>
    <Abstract>Method that free the gpu geometric information of the mesh. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uploadGPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>afb41b8e1369f0e84c98599f77faa3a15</Anchor>
    <Abstract>Method that upload the geometric information of the mesh to the gpu. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uploadBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a6a4d6796141eaab83a57b5e151c7f768</Anchor>
    <Abstract>Method that upload the geometric information of the mesh to the gpu. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>aab0f5df675edc9b7a3238bde6da709a7</Anchor>
    <Abstract>Method that computes the axis aligned bounding box of the mesh geometry. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a6b6d7555e92249e208fe13957544c6d3</Anchor>
    <Abstract>Method that computes the normals of the mesh geometry. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderLines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a17e4c4826285d98b4b32e122dfef4472</Anchor>
    <Abstract>Method that render the mesh lines. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a1ea8459ad11bcdc1f56ae2b55880c06b</Anchor>
    <Abstract>Method that render the mesh triangles. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderQuads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>aee14ddea6b4c89aa19fdc8a2c9ad921e</Anchor>
    <Abstract>Method that render the mesh quads. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a0cf5f840607f52166c8bb43a6225c5b5</Anchor>
    <Abstract>Method that render the all mesh. </Abstract>
    <DeclaredIn>Mesh.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>ac50d8855e4abe929bf0d071231b5132b</Anchor>
    <Abstract>Mesh vertices. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>aaf6fb6b2b99d3da4c20bf8543cdff183</Anchor>
    <Abstract>Mesh lines. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_triangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>abb99b447e492f1abcbb19fc0d69726c1</Anchor>
    <Abstract>Mesh triangles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_quads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>ace906f29bf2473a65ed3528109f2b26a</Anchor>
    <Abstract>Mesh quads. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_aaBoundingBox</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a1b32514c1852f291cd6ce04f5f6e025f</Anchor>
    <Abstract>Mesh axis aligned bounding box. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vao</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>aea867f93cec770f3f947bc0854b70d89</Anchor>
    <Abstract>Index to the Vertex Array Object of the mesh in the gpu. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vbos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a43f111d2389eab69d1a000d35e354844</Anchor>
    <Abstract>Vector of indices of the Vertex Buffer Objects of the mesh in the gpu. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_linesSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a5b32ff7da4ba80efc3255ed8d2e6b85f</Anchor>
    <Abstract>Size of the mesh lines. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_trianglesSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>af110a7e3c83f5d0061d30c70f108caae</Anchor>
    <Abstract>Size of the mesh triangles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_quadsSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>abab803e615a33ff5543d29b5382d5bc6</Anchor>
    <Abstract>Size of the mesh quads. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_verticesSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a6db0ffa837f00c8d06bac014160b115a</Anchor>
    <Abstract>Size of uploaded vertices. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_modelMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>a41d63f67174cc30717e01df37042c86b</Anchor>
    <Abstract>Model matrix of the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_format</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>afbdda14970678949f7ac519e4eaa7f0c</Anchor>
    <Abstract>Attribs format in gpu. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_facetType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Mesh</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_mesh.html</Path>
    <Anchor>ab2d1515a84cb0eb4ac426ec440fc68cd</Anchor>
    <Abstract>Facet type uploaded to the gpu. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::ObjReaderTemplated</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>nlgeometry::ObjReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_obj_reader_templated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::ObjReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_obj_reader_templated.html</Path>
    <Anchor>ab408c1b7ac1eb62852941dc590bf528b</Anchor>
    <Abstract>Static method that fill the referenced mesh. </Abstract>
    <DeclaredIn>ObjReaderTemplated.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::ObjReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_obj_reader_templated.html</Path>
    <Anchor>a9ff33a3e82d34c06ab09a9239a9a592b</Anchor>
    <Abstract>Static method that return a mesh pointer with the geometric data loaded. </Abstract>
    <DeclaredIn>ObjReaderTemplated.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::ObjWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::ObjWriter</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_obj_writer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::ObjWriter</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_obj_writer.html</Path>
    <Anchor>ae59b5172b0c29921780a3dedaea9a707</Anchor>
    <Abstract>Static method to write mesh to a obj file. </Abstract>
    <DeclaredIn>ObjWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::ObjWriter</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_obj_writer.html</Path>
    <Anchor>ae544b195c47eee5ea47ca8a937e4d82e</Anchor>
    <Abstract>Static method to write a vector of facets and vertices to a obj file. </Abstract>
    <DeclaredIn>ObjWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::OffWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::OffWriter</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_off_writer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::OffWriter</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_off_writer.html</Path>
    <Anchor>a6e82179191b70ed3b4c7c5655c56fab1</Anchor>
    <Abstract>Static method to write mesh to a off file. </Abstract>
    <DeclaredIn>OffWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::OffWriter</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_off_writer.html</Path>
    <Anchor>a882c51481159ac4e0b31730dbd6fa7dd</Anchor>
    <Abstract>Static method to write a vector of facets and vertices to a off file. </Abstract>
    <DeclaredIn>OffWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::OrbitalVertex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OrbitalVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a54215bdd4f3a4094af6c8022d148069f</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OrbitalVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a11107c11446a4d7ad98ef410750e0803</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~OrbitalVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>ae6a7d00589ab9f4f2898f167ee52e3e5</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a338c570ca6f4067542686f413a473ba4</Anchor>
    <Abstract>Method that returns the orbital vertex center. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tangent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>ac1b16998f5f6dcf9fd9b30cc8ac8570f</Anchor>
    <Abstract>Method that returns the orbital vertex tangent. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a85747a1ab4a14bdf217c108a486c7746</Anchor>
    <Abstract>Method to displace the orbital vertex position. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>place</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a2b1f384d3d4d5a1556a5e5ca394e9063</Anchor>
    <Abstract>Method to place the orbital vertex position. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>af7d67219d44cf0945cc2b612556153c4</Anchor>
    <Abstract>Method to rotate the orbital vertex position and normal. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a0355238df605f6643ed1cf89061c1372</Anchor>
    <Abstract>Method to rotate the orbital vertex position and normal. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>norm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a3dcd7c565faf93fc699c230dc4449d98</Anchor>
    <Abstract>Method to change the modulus of the position vector. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>ad32f00c1acf0826f03367916c480a96d</Anchor>
    <Abstract>Method that return a cloned orbtial vertex. </Abstract>
    <DeclaredIn>OrbitalVertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a53ee15d4da43b39dc92caad95172019c</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a03f9f5e61e3e4d5a737f12965df14bbc</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>ab9a3a2ad35be1d66adc0cb259b56e1ff</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a78c3169e9e0d78da31d4283b2a512bc1</Anchor>
    <Abstract>Method to get the vertex id. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a1ed471b90cc522a0175298450d9198a1</Anchor>
    <Abstract>Method to get the vertex position. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>aadfa89471a7318fc450dd6bb9d102f71</Anchor>
    <Abstract>Method to get the vertex normal. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a15858621eef1167bd0f33e3c659720fb</Anchor>
    <Abstract>Method to get the vertex color. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a1e286568a7e01921125880bacde037ab</Anchor>
    <Abstract>Method to get the vertex uv coordinates. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a0c4d8ec5707ccbe9f0d8966db6e07813</Anchor>
    <Abstract>Method that store the vertex attribs (position, normal, color, uv coordinates) and assigns the vertex...</Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>a4b06fbaaac56e289283f73fe89a33057</Anchor>
    <Abstract>Orbital Vertex center. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tangent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::OrbitalVertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_orbital_vertex.html</Path>
    <Anchor>adcb369ad4c0a929c3933ee43df8c5e49</Anchor>
    <Abstract>Orbital Vertex tangent. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a62497d24119195fd38e1670b991c82fb</Anchor>
    <Abstract>Vertex id. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a0a9f36dd6dd1053292f46cd0d164ba17</Anchor>
    <Abstract>Vertex position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>afd5161b4f11c8883742d7fe08d27a732</Anchor>
    <Abstract>Vertex normal. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a66bb0fae826fd2785d37edae8e31090c</Anchor>
    <Abstract>Vertex color. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_uv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a434e36adf7f6ffe8ea290b0524655197</Anchor>
    <Abstract>Vertex uv coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::SectionQuad</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SectionQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>ae60a5d5529392332ba2d47c40609038b</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SectionQuad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a33a50756c52b57dff3ded4a4e45ec882</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a298ef933c40317438a0ec1ef39648c36</Anchor>
    <Abstract>Method that return the first section quad vertex. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a93d7dce40c7599d325c280b3c02dfaed</Anchor>
    <Abstract>Method that return the second section quad vertex. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a451c77634c2b2cf6471d19d06f4c800a</Anchor>
    <Abstract>Method that return the third section quad vertex. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>af057a4410b5e8ed4ef29e51456edb682</Anchor>
    <Abstract>Method that return the fourth section quad vertex. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a956326e081155be7a80486cf1b1a6646</Anchor>
    <Abstract>Method that inverse the section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inversed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>ab34403a3e0926518bdc6b91e18ed7eb4</Anchor>
    <Abstract>Method return a pointer to a inversed section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a39fb08beb89457e45b0932c43bdc7e61</Anchor>
    <Abstract>Method that displace the section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>place</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a286657e0473787c1c86e7cf29cce8fc5</Anchor>
    <Abstract>Method that place the section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a9f8bd283e67fd313f272f1f24e0e1d20</Anchor>
    <Abstract>Method to rotate the section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>aa1955ae7dcb64398144d8e6d96b004fa</Anchor>
    <Abstract>Method to rotate the section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a5d56f2bde2f83e5e4336efd2dee5f4cb</Anchor>
    <Abstract>Method to orient the section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>axis0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a382c29a513a018cfe892fdee92ec23f1</Anchor>
    <Abstract>Method that return the 0 section quad axis. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>axis1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>aa0cf070052136bb8f0eb262842eaaa96</Anchor>
    <Abstract>Method that return the 1 section quad axis. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>norm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>acef7591e4a3280f2ef3684b1719a9267</Anchor>
    <Abstract>Method to change the modulus of the section quad vertices. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>ae1d9db459822f09cc616a5a85a70f7fb</Anchor>
    <Abstract>Method to normalize the section quad vertices. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a0d0807b4d9553a3f35897a57bb6d5ded</Anchor>
    <Abstract>Method that return the section quad normal. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a04e2381c219632a4cc8954c94b8f2d1c</Anchor>
    <Abstract>Method that return a cloned section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a5ca45ba4fb3225c7a319b6c021757a59</Anchor>
    <Abstract>Method that delete the section quad vertices. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a4a49905d5f8d1b3b23d24f8793212b52</Anchor>
    <Abstract>Method that returns a quaternion with the minimum z rotation between this and the given section quads...</Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>aa18137f5ee28c546ab7488f384e32152</Anchor>
    <Abstract>Method that returns the minimum z rotation between this and the given section quads. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a608962f1f48c6e420bfdc149bf9add12</Anchor>
    <Abstract>Static method that return a identity section quad. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createPipe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>aa518b1b2d2abd79c0efbf53f6e6da4e0</Anchor>
    <Abstract>Static method that added facets to the referenced facets vector forming a pipe. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>aa8baa02c0c260f4e2c2bcd9246d343a4</Anchor>
    <Abstract>Static method that returns a quaternion with the minimum z rotation between two section quads...</Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getZAngle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>ac09fa6afcfdbb84de147576b15ecf19f</Anchor>
    <Abstract>Static method that returns the minimum z rotation between two section quads. </Abstract>
    <DeclaredIn>SectionQuad.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vertex0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a7d5625b05f54c2bbcf71859f6638ccac</Anchor>
    <Abstract>First section quad vertex. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vertex1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>aff4db422582ffb79e30601ee21c21dda</Anchor>
    <Abstract>Second section quad vertex. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vertex2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a05278b582f66017ef608bcabcc3923c4</Anchor>
    <Abstract>Third section quad vertex. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_vertex3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::SectionQuad</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_section_quad.html</Path>
    <Anchor>a9d2c39c3205bdbf27b8287717ba00a04</Anchor>
    <Abstract>Fourth section quad vertex. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::SpatialHashTable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::SpatialHashTable</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_spatial_hash_table.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpatialHashTable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SpatialHashTable</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_spatial_hash_table.html</Path>
    <Anchor>a6881fd646a503ff161a8c15b1120596f</Anchor>
    <Abstract>Default Constructor. </Abstract>
    <DeclaredIn>SpatialHashTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SpatialHashTable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SpatialHashTable</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_spatial_hash_table.html</Path>
    <Anchor>aa03a2aff05a2cbf6188ef049dc07d5d9</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>SpatialHashTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SpatialHashTable</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_spatial_hash_table.html</Path>
    <Anchor>adc71d4e4c2091086eb80d730bd14f112</Anchor>
    <Abstract>Method that return a pointer to a vertex in the table with the same position of the given vertex if t...</Abstract>
    <DeclaredIn>SpatialHashTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::SpatialHashTable</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_spatial_hash_table.html</Path>
    <Anchor>a5ccceb4a6a9e09195228c5ecb8e7244b</Anchor>
    <Abstract>Method that return a vector of the vertices contained in the table. </Abstract>
    <DeclaredIn>SpatialHashTable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::tFacet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::tFacet</Scope>
    </TokenIdentifier>
    <Path>structnlgeometry_1_1t_facet.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::tIndex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::tIndex</Scope>
    </TokenIdentifier>
    <Path>structnlgeometry_1_1t_index.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Abstract>Information about the current nlgeometry version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>a5baffdf5c24ab662a33df4e47b091a7d</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>a0471a5c137bf80e98af975be033710cf</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>ae66603ad1a6e447e59739dcf0634e7d0</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>a3e58aea1f192692a77448562c341bd55</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>ab9fe64ee5238298c75d82929a975559a</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>ab38adfec09ee395ae247066813bccd05</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>af52aaed9ec4a1398f6abbbbd295e3510</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>a13c9ba8a87138dcbec39310134c59765</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>a8bc96aa80cc898f7c3653ba823c7eb06</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlgeometry::Version</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_version.html</Path>
    <Anchor>ae08e17dcb986c582417e67da097b38b6</Anchor>
    <DeclaredIn>nlgeometry/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlgeometry::Vertex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a53ee15d4da43b39dc92caad95172019c</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a03f9f5e61e3e4d5a737f12965df14bbc</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>ab9a3a2ad35be1d66adc0cb259b56e1ff</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a78c3169e9e0d78da31d4283b2a512bc1</Anchor>
    <Abstract>Method to get the vertex id. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a1ed471b90cc522a0175298450d9198a1</Anchor>
    <Abstract>Method to get the vertex position. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>aadfa89471a7318fc450dd6bb9d102f71</Anchor>
    <Abstract>Method to get the vertex normal. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a15858621eef1167bd0f33e3c659720fb</Anchor>
    <Abstract>Method to get the vertex color. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a1e286568a7e01921125880bacde037ab</Anchor>
    <Abstract>Method to get the vertex uv coordinates. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displace</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a9b3d8b9ae6ff8ebc427ce8172a48a400</Anchor>
    <Abstract>Method to displace the vertex position. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>place</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a7b9751bbce975494c47a37d958b2979e</Anchor>
    <Abstract>Method to place the vertex position. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a933fae3f109abd6952c10f9ca4a3c583</Anchor>
    <Abstract>Method to rotate the vertex position and normal. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a4b887360d9bda0f0baac3802550597b3</Anchor>
    <Abstract>Method to rotate the vertex position and normal. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>norm</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a8addf6c3c5ca3acd4fc1a41e7842a0c9</Anchor>
    <Abstract>Method to change the modulus of the position vector. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>store</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a0c4d8ec5707ccbe9f0d8966db6e07813</Anchor>
    <Abstract>Method that store the vertex attribs (position, normal, color, uv coordinates) and assigns the vertex...</Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a2c0e905f0052fda11ecded276831466d</Anchor>
    <Abstract>Method that return a cloned vertex. </Abstract>
    <DeclaredIn>Vertex.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a62497d24119195fd38e1670b991c82fb</Anchor>
    <Abstract>Vertex id. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a0a9f36dd6dd1053292f46cd0d164ba17</Anchor>
    <Abstract>Vertex position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>afd5161b4f11c8883742d7fe08d27a732</Anchor>
    <Abstract>Vertex normal. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_color</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a66bb0fae826fd2785d37edae8e31090c</Anchor>
    <Abstract>Vertex color. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_uv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlgeometry::Vertex</Scope>
    </TokenIdentifier>
    <Path>classnlgeometry_1_1_vertex.html</Path>
    <Anchor>a434e36adf7f6ffe8ea290b0524655197</Anchor>
    <Abstract>Vertex uv coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlphysics</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>nlphysics</Scope>
    </TokenIdentifier>
    <Path>namespacenlphysics.html</Path>
    <Abstract>Copyright (c) 2015-2017 VG-Lab/URJC. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlphysics::Fem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlphysics::Fem</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_fem.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Fem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Fem</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_fem.html</Path>
    <Anchor>ac11a6ccf56f4d223ba2aabdd462506f6</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Fem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlphysics::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a095d4fc4cbcc826675518308ffaf4825</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Node</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a730842ce5f94bb0fce23bca6a85bb938</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a63917737693d56a4e3deaee294546d2c</Anchor>
    <Abstract>Method that returns the node id. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a093b9e2c227c1921ded38357beb880d8</Anchor>
    <Abstract>Method that returns the node initial position. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>displacement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>ad6d4c0decadb0b987fb5cf14c2b26d80</Anchor>
    <Abstract>Method that returns the node displacement. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a85ce3947ebb8ab87966da527adc1bf62</Anchor>
    <Abstract>Method that returns the node position. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a2185c9aa971151910cdcaa22cdfa6977</Anchor>
    <Abstract>Method that returns the node center. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tangent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>ac662c15a86b7d97098a5838703914674</Anchor>
    <Abstract>Method that returns the node tangent. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>force</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>af5aa55bf252ff78f67c6505f0bb5a6c2</Anchor>
    <Abstract>Method that returns the node force. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a27604e85fc222599bf0cd814022a98fd</Anchor>
    <Abstract>Method that returns the node fixed condition. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>aaf5f9a8e024b295cd28cb1b6949c3ed7</Anchor>
    <Abstract>Method that returns the node contour condition. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>abaaf3f6989913b06eaf904e56cacf7c6</Anchor>
    <Abstract>Index. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_initialPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a8bb4b349f73ab863bd5ad77d84fd7aba</Anchor>
    <Abstract>Initial position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_displacement</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a72a7865c1a727a060f739fd9ee7b8107</Anchor>
    <Abstract>Displacement. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a60936db90d8827dc826945de3565b1c3</Anchor>
    <Abstract>Actual position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>ae00036947ac9c6870e68ffd3cecd2f5e</Anchor>
    <Abstract>Node center. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tangent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>aa9210a56952b9191a235fe4650003822</Anchor>
    <Abstract>Node tangetn. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_force</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>abd8cdbb4eb361c94565975c57f4b776d</Anchor>
    <Abstract>Force. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_fixed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>a3c6aeee57110ca604d7d7bf60010d4d9</Anchor>
    <Abstract>Condition if node is fixed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_contour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Node</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_node.html</Path>
    <Anchor>af9789e5d188172427073ec70a938f411</Anchor>
    <Abstract>Condition that indicates if the node is a inner node or a contr. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlphysics::Tetrahedron</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tetrahedron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>afaf0cd3be3b20a18b20d44f43d4d145e</Anchor>
    <Abstract>Constructor. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Tetrahedron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ab20cc80b4d6d0318d54f91f525aa5be0</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a3f81b818eba3c5872e56a7eae0939030</Anchor>
    <Abstract>Method that returns the first tetrahedron node. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a9e0c0c584afbb1e61b594b5506217764</Anchor>
    <Abstract>Method that returns the second tetrahedron node. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ad10fe2834c44101150fdd22ae343eec2</Anchor>
    <Abstract>Method that returns the third tetrahedron node. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>node3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a0c2cf644a518b5a8656ed05df1680cdb</Anchor>
    <Abstract>Method that returns the fourth tetrahedron node. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a98b0328756bff91cea5cadbab6f54640</Anchor>
    <Abstract>Method that returns the b0 matrix. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a7fe6148b309777beb31f5bb5c9bdc441</Anchor>
    <Abstract>Method that returns the b1 matrix. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a232162646adf293fad4e4074908addf2</Anchor>
    <Abstract>Method that returns the b2 matrix. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>b3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ad5f6ce29abf1a25380c86c031cd1d475</Anchor>
    <Abstract>Method that returns the b3 matrix. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ab5af8894550ad3d9cc262c51aa201c87</Anchor>
    <Abstract>Method that returns the tetrahedron volume. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>face0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ac431da50fafaff4628ce11b3286de4b6</Anchor>
    <Abstract>Method that check and return if the 0 face of the tetrahedron is a contour face. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>face1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a83cde7f78f09dd5ce1946625624f3dea</Anchor>
    <Abstract>Method that check and return if the 1 face of the tetrahedron is a contour face. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>face2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ab47627476a9370a650b75a86b0bc4cf5</Anchor>
    <Abstract>Method that check and return if the 2 face of the tetrahedron is a contour face. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>face3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>abe35d6e61dfeba425d8e39c13c75200f</Anchor>
    <Abstract>Method that check and return if the 3 face of the tetrahedron is a contour face. </Abstract>
    <DeclaredIn>Tetrahedron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ac243ec980156d9d49c24bab2f2dfd767</Anchor>
    <Abstract>First tetrahedron node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ab96254267ed90d852a63db04c31f55ea</Anchor>
    <Abstract>Second tetrahedron node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>acb6b604953eab3e7e71f3eb5e58f192c</Anchor>
    <Abstract>Third tetrahedron node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_node3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ad1ec860d41fc65b728369d34e361bbb6</Anchor>
    <Abstract>Fourth tetrahedron node. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_b0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a681ac748e91ebcfde1a33fd78b499cfa</Anchor>
    <Abstract>b0 matrix </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_b1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a7124c69e9dc65b2a8a84978a1a77cbcf</Anchor>
    <Abstract>b1 matrix </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_b2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a829867f8b268f088e5690a9363506ec3</Anchor>
    <Abstract>b2 matrix </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_b3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>a61e6e7b8993a1838bd32451e2396984c</Anchor>
    <Abstract>b3 matrix </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_volume</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlphysics::Tetrahedron</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_tetrahedron.html</Path>
    <Anchor>ad69c8ad76545b254a55727184647252b</Anchor>
    <Abstract>tetraheron volume </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlphysics::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Abstract>Information about the current nlphysics version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>a8f88179e361c1470ac3309a811cb77ff</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>abb159ad657822bae352be2c2922b0352</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>ae721fbbf2d5c1a9de47cc12a15af7d52</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>a6312a00912fa2d5c9b19ba015972cca5</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>aa3779fb40d349b3793730fcdd9176cd3</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>a7951169a6f033ae85de39f587e0c9b22</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>af78b8fbbe050e172c7d1083ba6a9aa48</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>aa448f88b61bfab5be73a15a7ba2d072b</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>a3c01c4db7952441fd8583ccde04b05c9</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlphysics::Version</Scope>
    </TokenIdentifier>
    <Path>classnlphysics_1_1_version.html</Path>
    <Anchor>a035c8f6cb01ecb7a6d3b7d31402eedaa</Anchor>
    <DeclaredIn>nlphysics/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlrender</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>nlrender</Scope>
    </TokenIdentifier>
    <Path>namespacenlrender.html</Path>
    <Abstract>Copyright (c) 2015-2017 VG-Lab/URJC. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlrender::Config</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlrender::Config</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_config.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlrender::Renderer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a26a24f5c595081a07dd8fe9e3d43e473</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Renderer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a67ca01b105cb1d712f9374dd9f14788b</Anchor>
    <Abstract>Default destructors. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a99ee7d8cc252857950116fd5b39009cf</Anchor>
    <Abstract>Method that return the scene camera view matrix. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a66eff4ed0b2d6d4eef369ac4f7eb1be2</Anchor>
    <Abstract>Method that return the scene camera view matrix. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a57631ba5646aa857034c85659fe858c5</Anchor>
    <Abstract>Method that return the level of detail. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tangentModulus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a99a055dd37fbde371dac9f861395ebbe</Anchor>
    <Abstract>Method that return the tangent modulus. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maximumDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>aea07c92a5411d4e0ba92c674b52507e9</Anchor>
    <Abstract>Method that return the maximum distance. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>alpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a68aa8de403c950140d6ee132d4777e3d</Anchor>
    <Abstract>Method that return the transparency factor. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tessCriteria</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>ac9c8a7af6d27fba61a5b1290d2e29a5f</Anchor>
    <Abstract>Method that return the tessellation criteria. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>colorFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a8ca6038e214ff29104c489809a57ed26</Anchor>
    <Abstract>Method that return the type of color function. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transparencyStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a04779f489d0494a4ac6c73b11ae37d5e</Anchor>
    <Abstract>Method that return the transparency status. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a7cc1da7329f91cb5c1edadc745bb5bbc</Anchor>
    <Abstract>Method that renderize the given mesh. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a0b38c787244a150c35064678ded91625</Anchor>
    <Abstract>Method that renderize the given meshes. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>ae466728836dfcf6d44ea0545b9387640</Anchor>
    <Abstract>Method that renderize the given meshes. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a7801513a44ad17b1371476a8c430c41e</Anchor>
    <Abstract>Method that extract the given mesh. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>ad198dda350f0211181ab141269e6ecce</Anchor>
    <Abstract>Method that extract the given meshes. </Abstract>
    <DeclaredIn>Renderer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_keepOpenGLServerStack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a2a76e86b5c95609c42ef42b05d2c4c08</Anchor>
    <Abstract>Variable to determine if keep the OpenGL server status. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_programLines</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a5135ef01154b0d93410eec5f20ea66b1</Anchor>
    <Abstract>Program to render lines. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_programTriangles</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a299c1ef045df4746cdaae5118fefde28</Anchor>
    <Abstract>Program to render tessellated triangles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_programQuads</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a8915782d537f9838953c1fa2a2a07c8b</Anchor>
    <Abstract>Program to render tessellated quads. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_programTrianglesFB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a8f1daff8c0ec8819a97819ef50f3debf</Anchor>
    <Abstract>Program to extract tessellated triangles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_programQuadsFB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a84f40c777e34f98b567c24faff65cff0</Anchor>
    <Abstract>Program to extract tessellated quads. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_programTransCompose</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>ac8d76d59510b28cdee631638e5443abc</Anchor>
    <Abstract>Program to compose the transparency scene. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_viewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>ae8d37054ebf9942db08328cc048c0afd</Anchor>
    <Abstract>Scene camera view matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_projectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a492e395ca550f9570d0f0b3265d2eaf5</Anchor>
    <Abstract>Scene camera projection matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_lod</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>af655d57f4e24ff7f07a0d59e746c6145</Anchor>
    <Abstract>Level of detail. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tng</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>af3689603340045ba25070f1743b8e0d5</Anchor>
    <Abstract>Tangent modulus. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_maximumDistance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>af909282d943829420e5595eb2eb1d34c</Anchor>
    <Abstract>Maximum tessellation distance. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_alpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a7464ce2c7abee8106058ba9f789f5ca6</Anchor>
    <Abstract>Transparency factor. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tessCriteria</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a47944ed58ae3320378ada59989698dfa</Anchor>
    <Abstract>Tessellation level of detail criteria. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_colorFunc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a5439c37b54c70bfdd519000ea71c268c</Anchor>
    <Abstract>Type of render color function. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_transparencyStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>ab3d9c92f5ac79ce4dabf975d776f6117</Anchor>
    <Abstract>Status of transparency render. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tfo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a151da8f9f097d9e044f0aba15276d8aa</Anchor>
    <Abstract>Vertex array object index to mesh extraction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_tbos</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a8174af3c9253f8baf3110f01063e1dda</Anchor>
    <Abstract>Vertex buffers object indices to mesh extraction. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_quadVao</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a13ff8a69b5553da6a2f229e2d10db04a</Anchor>
    <Abstract>Vertex array object index to quad. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_transSystemInit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a0c723510179e5318bbeeb8f995306e85</Anchor>
    <Abstract>Variable to indicates if the transparency system is initialized. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_opaqueFbo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a115548fcd89250578d5655bbe1082e54</Anchor>
    <Abstract>FBO used in the transparency composition to save opaque objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_transFbo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a30ff2805776b6ad42b60032e1c60f241</Anchor>
    <Abstract>FBO used in the transparency composition to save transparent objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_opaqueTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a65a9daf084c4c12fdc80b2ed341aab73</Anchor>
    <Abstract>Texture to save the opaque objects color. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_accumTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>ad5000fafeb28cf862d1eebc22d26f379</Anchor>
    <Abstract>Texture to save the tranparent accumulated objects color. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_revealageTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>af9f6239a01f87b778cc30dff4b758413</Anchor>
    <Abstract>Texture to save the traparent revealage objects color. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_depthTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a7fb25b324fc30ada70b90df48bdc818f</Anchor>
    <Abstract>Texture to save the opaque objects depth. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_transSystemWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>af0e1798562df3457f994a3c9a6b28b27</Anchor>
    <Abstract>Width of the screen for the transparency system. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_transSystemHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nlrender::Renderer</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_renderer.html</Path>
    <Anchor>a9cc39258fc280b1a5be0f7cae7841d9b</Anchor>
    <Abstract>height of the screen for the transparency system </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nlrender::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Abstract>Information about the current nlrender version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>a8a6c393bc8780f355e47b7913ed85357</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>a477f9a751512d770b7b1320214870b15</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>a61d6094c3217f39f5b559f6f9bea1991</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>a34347cb84c82d36ef59c1d02d5deaa3a</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>ac1f1e4fd492e103ae8c1ca930e2652ad</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>abfb36c0d97cac3215d0c630c4676d51b</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>a26dcec20200fa41d1e0c8dbc2792691c</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>aa14a44e0887ef3051f894c68d4ecb855</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>a8cb56c4564c0496407a889f7c2682e32</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nlrender::Version</Scope>
    </TokenIdentifier>
    <Path>classnlrender_1_1_version.html</Path>
    <Anchor>a24bf34cbd6fa2da3558a608748b1c825</Anchor>
    <DeclaredIn>nlrender/version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>std::hash&lt; MyPair &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>std::hash&lt; MyPair &gt;</Scope>
    </TokenIdentifier>
    <Path>structstd_1_1hash_3_01_my_pair_01_4.html</Path>
  </Token>
</Tokens>
