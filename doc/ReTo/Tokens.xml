<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a3559578eb108893ea9e9c60e5809a9d9</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7755124b223b934f74c8cef06313837e</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a49e9c159ad03059c2069d97de4808f4f</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a096b07b0fc896b8c46d6d1e7f584eac2</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a3771caabed63e11b17005a1083dffb48</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a5f196b05f66df111c68d11d0bad2f104</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a623083520249e9462db472a24e0c1dbe</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>aa91940532072eb809d9c9d740ae94817</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a81e0621d07ed1503fa56efa693d68528</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a2fafe7618540077582808fd472937c56</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RETO_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7f01b47172f96425492eab6e4d52d850</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::AbstractCameraController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::AbstractCameraController</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_abstract_camera_controller.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Camera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Abstract>Class to manage camera. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>ab9051371322ea60f222187c376ed98d3</Anchor>
    <Abstract>use as session name to disable ZEROEQ </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>ac5573fe97d2d351b61604ac12df3be32</Anchor>
    <Abstract>Camera constructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Camera</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a22c8e04892dc269450756820b120a6d1</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZeqSession</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>aa305a146709d483195b6177e011d1d7a</Anchor>
    <Abstract>Method to start or change the camera zeqSession. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nearPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a388f65bf17cbc9a273e9b480e4516eee</Anchor>
    <Abstract>Method to obtain the near plane distance. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nearPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a0f2f6c0aa06e491a574535fb9ac0cff4</Anchor>
    <Abstract>Method to establish the near plane distance. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>farPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>afb250869ba2bf7a392ab4dae22542373</Anchor>
    <Abstract>Method to obtain the far plane distance. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>farPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a97f9217b78b6300c56aea4ee094e1e9e</Anchor>
    <Abstract>Method to establish the far plane distance. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>ace959415d9a76bb969a7cd8ef21d51ac</Anchor>
    <Abstract>Method to obtain the field of view angle value. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fieldOfView</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a272aa7fc935463f3d520ea03fc5aee7f</Anchor>
    <Abstract>Method to establish field of view angle. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a8c65eb263a6c430f317fc3be6b12222e</Anchor>
    <Abstract>Method to get the pointer to projection matrix of the camera vectorized in columns. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>viewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>af04acafea51d165cd9ba48eefdc5687f</Anchor>
    <Abstract>Method to get the pointer to view matrix of the camera vectorized in columns. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectionViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a6b940cdb827ea5b1aa2c85da1c820f9c</Anchor>
    <Abstract>Method to get the pointer to view-projection matrix of the camera vectorized in columns. </Abstract>
    <DeclaredIn>Camera.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_fovTan</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>afade9ef30cf0e0fbd7b909c54c7269e4</Anchor>
    <Abstract>Factor to calculate the camera projection matrix based on the camera far plane, near plane...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_fov</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a4e954b9f6ba2041e46077619b79fcc8c</Anchor>
    <Abstract>Camera fild of view. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ratio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a7eef02742642b3ef7f175fa0e51c1e31</Anchor>
    <Abstract>Camera ratio. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nearPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a2fd847c5d84f9c54e9aa7c2013aeb105</Anchor>
    <Abstract>Camera near plane. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_farPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>aa27ef306620aebcb9250f113736af0d3</Anchor>
    <Abstract>Camera far plane. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_projectionMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>ae30fbc701aed0bc995648aa1c0690dea</Anchor>
    <Abstract>Projection matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_isProjMatClean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>ae5e8a749b6aabe85c4e019c3803ab913</Anchor>
    <Abstract>Bool to check the clean state of projection matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_viewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a76e74f8b3d8619bfab16af6342004ecb</Anchor>
    <Abstract>View matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_projectionViewMatrix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>ae2adb6a4210287d45d9256482be0dc7e</Anchor>
    <Abstract>Projection view matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_enableZeqConnChanges</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Camera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera.html</Path>
    <Anchor>a8465c8de8dbda78ee6ca66f4d37f68e3</Anchor>
    <Abstract>Bool to enable zeq changes in view matrix. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::CameraAnimation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::CameraAnimation</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_camera_animation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::ClippingPlane</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Abstract>Class to manage a clipping plane. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClippingPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>ad2859a748032be9c2098506c703fa5b7</Anchor>
    <Abstract>ClippingPlane constructor. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClippingPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>af0b4acc3e78c3d9a008eb9eafa0e70ce</Anchor>
    <Abstract>ClippingPlane constructor. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ClippingPlane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>aa591b6c769d5edd0f08d92118c2f3185</Anchor>
    <Abstract>ClippingPlane destructor. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getEquation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>aa31a1118154583ac81e50151ea4767ac</Anchor>
    <Abstract>Method to get the clipping plane equation. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEquation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>a73f81ad6e2511677d53135d17bd790a1</Anchor>
    <Abstract>Method to set the clipping plane equation. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEquationByPointAndNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>a96514a1268eca6dd5b60128c48772ee5</Anchor>
    <Abstract>Method to set the clipping plane equation. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEquationByPointAndVectors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>ad46c10923f525743928e9b71492343eb</Anchor>
    <Abstract>Method to set the clipping plane equation. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEquationByPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>a91244b7247c37d322e40b2b87b5dbaa9</Anchor>
    <Abstract>Method to set the clipping plane equation. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getClippingMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>a81185534a591d9c1a0f50e288402799b</Anchor>
    <Abstract>Method to get the plane clipping mode. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClippingMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>a314924c3863680ea9944772b6295fec6</Anchor>
    <Abstract>Method to set the plane clipping mode. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>a7edf7d35d9d9ac58ddc49b2d2584d1ae</Anchor>
    <Abstract>Method to activate the clipping plane and activate it&amp;#39;s uniforms. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deactivate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>acdc9a045e043cd44e9534f13ceca45d4</Anchor>
    <Abstract>Method to deactivate the clipping plane. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingPlane</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_plane.html</Path>
    <Anchor>a7f129cdfb2e64ebca846bd290146a420</Anchor>
    <Abstract>Method to clear clipping plane. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::ClippingSystem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Abstract>Class to manage clipping planes. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClippingSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>af7228a3f654aca59f4129af778ef4e23</Anchor>
    <Abstract>ClippingSystem constructor. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ClippingSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a44344e1048cb31e3cf02776823eac3d3</Anchor>
    <Abstract>ClippingSystem constructor passing vertex shader code. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~ClippingSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a4f023818f8b6df144f80c50760da96be</Anchor>
    <Abstract>ClippingSystem destructor. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>ae32302dbf783fbece403c19251a706fe</Anchor>
    <Abstract>Method to get a clipping plane from ClippingSystem. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>set</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a43585406bc5b3f095900e29b746563af</Anchor>
    <Abstract>Method to set a new clipping plane to ClippingSystem. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a8a6aac5dc5a1ec762cf215618d09d09f</Anchor>
    <Abstract>Method to remove a clipping plane from ClippingSystem. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>activatePlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a76282a1c276cd74cdcbd9d4bf757d72f</Anchor>
    <Abstract>Method to activate clipping planes. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deactivatePlanes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a6d459e6e73bf9986dc76661b034dfef5</Anchor>
    <Abstract>Method to deactivate clipping planes. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a0455a4a03d20754dfa73dac15e2c54bd</Anchor>
    <Abstract>Method to draw objects using clipping system. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a4cb634827b5fac99872bb8e6386d278e</Anchor>
    <Abstract>Method to add a pickable object. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>adf292fdaf51baf2b97c6c78257e970ae</Anchor>
    <Abstract>Method to remove a pickable object. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>program</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a3029ebe08c0c67be0c7fbda58648e71a</Anchor>
    <Abstract>Method to get program handler. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ClippingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_clipping_system.html</Path>
    <Anchor>a1eb64761d9876d83728fde55ed6ba925</Anchor>
    <Abstract>Method to clear clipping planes. </Abstract>
    <DeclaredIn>ClippingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Framebuffer2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Abstract>Class to manage a framebuffer with 2D textures. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Framebuffer2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Anchor>a1a1aa9696f93ccd7ad6fe52fbb0c68bb</Anchor>
    <Abstract>Framebuffer2D constructor. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Framebuffer2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Anchor>af4adc9040fa5cae9104e87cf769484d1</Anchor>
    <Abstract>Framebuffer2D destructor. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Anchor>a9047a904a2ac404112bd9aed24d555a3</Anchor>
    <Abstract>Method to bind framebuffer. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Anchor>ad21b4ffe25b2673b0c9544ce9304c9d7</Anchor>
    <Abstract>Method to bind default framebuffer. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Anchor>a4001c9079d6429d2acd13274162bc6f6</Anchor>
    <Abstract>Method to resize the framebuffer size. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindAttachments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Anchor>a30680702f4b76831fd16edba1cc1102b</Anchor>
    <Abstract>Method to bind all framebuffer attachments. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Framebuffer2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_framebuffer2_d.html</Path>
    <Anchor>a01170395b8a6d90434c42805c634ea38</Anchor>
    <Abstract>Method to bind all framebuffer attachments. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Quad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>aaffcd66673f671e73fb9ae7f40f1dc84</Anchor>
    <Abstract>Quad constructor. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Quad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>a4efc935e6c25e2709da4d937362e62a5</Anchor>
    <Abstract>Quad destructor. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>program</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>a54c80302f54dbf02607fdd40fdf33d07</Anchor>
    <Abstract>Method to get program handler. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>ab0dcf929c60fe92c838d4560af3ed452</Anchor>
    <Abstract>Method to draw quad. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>ad2a276d9e487a7fb0c180dbd7237b3eb</Anchor>
    <Abstract>Method to clear quad resources. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::FreeCameraController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::FreeCameraController</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_free_camera_controller.html</Path>
    <Abstract>Class to control orbital camera. </Abstract>
    <DeclaredIn>FreeCameraController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::KeyCamera</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::KeyCamera</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_key_camera.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Model</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Model</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_model.html</Path>
    <Abstract>Auxiliar struct from ObjParser. </Abstract>
    <DeclaredIn>ObjParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Model</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_model.html</Path>
    <Anchor>a4ec2fe5979ababb1879a448a291b48a0</Anchor>
    <Abstract>Container of raw vertices. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Model</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_model.html</Path>
    <Anchor>ad4024090432335cf0e9541cbc369519d</Anchor>
    <Abstract>Container of raw normals. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>indices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Model</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_model.html</Path>
    <Anchor>a40ad3b75d31feef04efa730d4a85e312</Anchor>
    <Abstract>Container of raw indices. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texCoords</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Model</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_model.html</Path>
    <Anchor>a88b7d9056c81019c477af0dd2625d648</Anchor>
    <Abstract>Container of raw texCoords. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tangents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Model</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_model.html</Path>
    <Anchor>a75ab9d24dacdacb83286508a6bcf520e</Anchor>
    <Abstract>Container of raw tangents. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bitangents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Model</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_model.html</Path>
    <Anchor>ac35e122b7912d7093423b07eeb0244e5</Anchor>
    <Abstract>Container of raw bitangents. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::ObjParser</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::ObjParser</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_obj_parser.html</Path>
    <Abstract>Class to read obj mesh files. </Abstract>
    <DeclaredIn>ObjParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ObjParser</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ObjParser</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_obj_parser.html</Path>
    <Anchor>afdad2d589c4ca889929b0b9708098193</Anchor>
    <Abstract>ObjParser constructor. </Abstract>
    <DeclaredIn>ObjParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadObj</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ObjParser</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_obj_parser.html</Path>
    <Anchor>abc293e587f4a87476de56ee26eddc272</Anchor>
    <Abstract>Load new obj file. </Abstract>
    <DeclaredIn>ObjParser.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::OrbitalCameraController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::OrbitalCameraController</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_orbital_camera_controller.html</Path>
    <Abstract>Class to control orbital camera This class manage the movement, rotation, zoom and animation of orbit...</Abstract>
    <DeclaredIn>OrbitalCameraController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OrbitalCameraController</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::OrbitalCameraController</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_orbital_camera_controller.html</Path>
    <Anchor>a9e2d406a7989a53c3adb9c7bb299e74f</Anchor>
    <Abstract>OrbitalCameraController class constructor. </Abstract>
    <DeclaredIn>OrbitalCameraController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::OrbitalCameraController</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_orbital_camera_controller.html</Path>
    <Anchor>a38205c28eaa6326a2892cd6b72ae2b23</Anchor>
    <Abstract>Method to establish the pivot or orbital center for the camera. </Abstract>
    <DeclaredIn>OrbitalCameraController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::OrbitalCameraController</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_orbital_camera_controller.html</Path>
    <Anchor>a23381f86bff1f7153ba402191c4699d9</Anchor>
    <Abstract>Method to obtain the pivot or orbital center. </Abstract>
    <DeclaredIn>OrbitalCameraController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Pickable</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Pickable</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_pickable.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendId</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Pickable</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_pickable.html</Path>
    <Anchor>a22ad8dafd837ad314294e5054f0c11c4</Anchor>
    <Abstract>Method to update currentOffset. </Abstract>
    <DeclaredIn>Pickable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>render</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Pickable</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_pickable.html</Path>
    <Anchor>aad223d243fd8177567d244d04a8364fb</Anchor>
    <Abstract>Method to render a Pickable object. </Abstract>
    <DeclaredIn>Pickable.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::PickingSystem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PickingSystem</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>ae06d7dd62c79c9c9652fad13befe8f9d</Anchor>
    <Abstract>Reuse a ShaderProgram that lacks fragment shader. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AddObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>a46be2447df88faf9012e1ed03492df85</Anchor>
    <Abstract>Method to add a Pickable object. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RemoveObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>a6ed149604cb48b3fec476ccdb421aaa8</Anchor>
    <Abstract>Method to remove a Pickable object. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>a6bbcd8949eefc30068a983073d2f7ea1</Anchor>
    <Abstract>Method to clear Pickable elements. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>click</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>a7b3b8056721f7caac2553946211e0e13</Anchor>
    <Abstract>Method to find front object in a specific point. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>area</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>ade28acfad6f9e79d4d9017996b5ab354</Anchor>
    <Abstract>Method to find front object in a specific area. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>a56845494636b3aafe1e5b40dcb46ce13</Anchor>
    <Abstract>This method is invoked in the constuctor after creating the program. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>renderObjects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::PickingSystem</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_picking_system.html</Path>
    <Anchor>a7f650671622468df21c1bb5a032e5a59</Anchor>
    <Abstract>This method is invoked to render objects. </Abstract>
    <DeclaredIn>PickingSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Quad</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Abstract>Class to manage a quad. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Quad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>aaffcd66673f671e73fb9ae7f40f1dc84</Anchor>
    <Abstract>Quad constructor. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Quad</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>a4efc935e6c25e2709da4d937362e62a5</Anchor>
    <Abstract>Quad destructor. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>program</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>a54c80302f54dbf02607fdd40fdf33d07</Anchor>
    <Abstract>Method to get program handler. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>ab0dcf929c60fe92c838d4560af3ed452</Anchor>
    <Abstract>Method to draw quad. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Quad</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_quad.html</Path>
    <Anchor>ad2a276d9e487a7fb0c180dbd7237b3eb</Anchor>
    <Abstract>Method to clear quad resources. </Abstract>
    <DeclaredIn>Framebuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::ShaderProgram</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Abstract>Class to manage shaders and programs. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>load</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a17b0fb879877ac683b2c5e991496d8d6</Anchor>
    <Abstract>Method to load and add a vertex and fragment shaders from file. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadVertexShader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a0155912ae6a096903a97884990213894</Anchor>
    <Abstract>Method to load and add a vertex shader from file. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFragmentShader</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>aaf11db4be3d4aa9281740ca8922b6fb0</Anchor>
    <Abstract>Method to load and add a fragment shader from file. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFromText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>af95494117f987a401be25553d67d9e1c</Anchor>
    <Abstract>Method to load and add a vertex and fragment shaders from text. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadVertexShaderFromText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a9bee553fddd5de6211d18f1b5f95aa31</Anchor>
    <Abstract>Method to load and add a vertex shader from text. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadFragmentShaderFromText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a77a05b3ee6ee2c6a58cf188af2412906</Anchor>
    <Abstract>Method to load and add a fragment shader from text. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compileAndLink</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a32ba126028c9307aadf151f4053c9769</Anchor>
    <Abstract>Method to compile a program. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>program</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>abf977daae0860e0787ce47655a36845e</Anchor>
    <Abstract>Method to get Program id. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>use</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a641d6a9a1505589ed8e320b011f99085</Anchor>
    <Abstract>Method to enable a program. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>ab7dc869084f80330044c04027d5ac3bf</Anchor>
    <Abstract>Method to disable a program (not necessary) </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a91298cbc35df7d7442e34b115321dc63</Anchor>
    <Abstract>Method to catching an attribute value of a vertex shader. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addAttributes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>ad862630453a533b55d6c4effaa49bbdd</Anchor>
    <Abstract>Method to catching an array of attribute values of a vertex shader. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindAttribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a0571ff43f7d1f3bff6476ce2cdc1c0fe</Anchor>
    <Abstract>Method to bind a specific index to a attribute value. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a8ed3e6f3fe78b2364050d309d4387b9f</Anchor>
    <Abstract>Method to catching an uniform value. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUniforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a0537d9e777807d1079de2f91edf26185</Anchor>
    <Abstract>Method to catching an array of uniform values. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bindUniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>ac124d9868ac051d0c7556b5eb951244c</Anchor>
    <Abstract>Method to bind a specific index to a uniform value. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isUniformCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a9e2bff85432aef0616e6bdca8af31b25</Anchor>
    <Abstract>Method to check if uniform exist (only check in uniform cache) </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isAttributeCached</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a3a53b95ab492658ce9fdce654c35db4d</Anchor>
    <Abstract>Method to check if attribute exist (only check in attribute cache) </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addUbo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a842508ab379800b4d4fa9b901237196e</Anchor>
    <Abstract>Method to catching an uniform buffer object. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>attribute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a420b0ba8ff35982fcccaf3cb5e1ee922</Anchor>
    <Abstract>Method to get a attribute index in cache. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a3a53c5433b6a39cb770488b07aa60ada</Anchor>
    <Abstract>Method to get a uniform index in cache. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ubo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>abb6b5c09752aec73bd9bcbda02a8c26c</Anchor>
    <Abstract>Method to get a Uniform Buffer Object index in cache. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>subprogram</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>acd31b058853dfd4a1ec88726ddc574fd</Anchor>
    <Abstract>Method to get a subprogram index of a specific kind of shader in cache. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a652b7878143be9647954c9e3840ef70c</Anchor>
    <Abstract>Method to get a attribute index in cache. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator[]</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>aac0d4f5992677a93966e88a6e20d3bf7</Anchor>
    <Abstract>Method to get a uniform index in cache. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniformb</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a821ef3cd188cbd6425e79fd20081d38f</Anchor>
    <Abstract>Method to send a boolean. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniformi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>af6029eb3e8a4c0764a21a5aee9f6aa4a</Anchor>
    <Abstract>Method to send an integer. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniformu</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a324c88baecb6e3cb10e676a7cc1fbc17</Anchor>
    <Abstract>Method to send an unsigned integer. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniformf</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a4e7cdbe3558efe99ccdbdbfa75747ab0</Anchor>
    <Abstract>Method to send a float. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a8353fb6c9d4a3f9e3523031904cb723f</Anchor>
    <Abstract>Method to send a vec3 with separated data. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform2v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a626a4646ca0f056896943bdb1f608d82</Anchor>
    <Abstract>Method to send a vec2. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform2v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a394c8ceab1f2dcaa07ba47a71ece4d64</Anchor>
    <Abstract>Method to send a vec2. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform3v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>ab72033d9345c46cae54085c15a344e55</Anchor>
    <Abstract>Method to send a vec3. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform3v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a423681ccc6641b48448dd367004b7270</Anchor>
    <Abstract>Method to send a vec3. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform4v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a468d74881b363c835a3823fba7b29f8d</Anchor>
    <Abstract>Method to send a vec4. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform4v</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a45588794c51ece48f2ddea0aac7475c9</Anchor>
    <Abstract>Method to send a vec4. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform2iv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a04ce9bcce2f263706bf5fa185d6f68b5</Anchor>
    <Abstract>Method to send a ivec2. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform2iv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a776e4773ce31d036cfb138c5fb964ff3</Anchor>
    <Abstract>Method to send a ivec2. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform3iv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a7a81bfc0800ed76181e3cff3f843d78f</Anchor>
    <Abstract>Method to send a ivec3. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform3iv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a762850de2a4366101401a856d75308e4</Anchor>
    <Abstract>Method to send a ivec3. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform4iv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a9f8cc76dffb89ba637ca86cd0bc9b681</Anchor>
    <Abstract>Method to send a ivec4. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform4iv</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>aa627b91339a3a488be4d034a8d289ca1</Anchor>
    <Abstract>Method to send a ivec4. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform3m</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>acd72e23ba7930469664158eaa15e5180</Anchor>
    <Abstract>Method to send a mat3. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform3m</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a6f92a5ed8f3bd893db3ec261d3438884</Anchor>
    <Abstract>Method to send a mat3. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform4m</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a8b8d51b6c084bbae048af8be9a380d95</Anchor>
    <Abstract>Method to send a mat4. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendUniform4m</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>acb07b86d2ada34e6b1895438c711d3f3</Anchor>
    <Abstract>Method to send a mat4. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>create</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a5d175dfec94a68070e622017543d71ca</Anchor>
    <Abstract>Method to create program and attach all shaders. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>link</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a40fdb238bb867ffdf5f02b1185bca625</Anchor>
    <Abstract>Method to link program and check status. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autocatching</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::ShaderProgram</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_shader_program.html</Path>
    <Anchor>a609f320c53d806f97afe7c3ec54cddff</Anchor>
    <Abstract>Autocatching attributes and uniforms. </Abstract>
    <DeclaredIn>ShaderProgram.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Spline</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Abstract>Class to manage spline structs. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Spline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a8c1f2d5d0c467de0a56c319968ccb9e4</Anchor>
    <Abstract>Create a new Spline object. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>evaluate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a58be5d7b5aafa5038499b8e4f3a8ebc6</Anchor>
    <Abstract>Evaluate the spline in a specific time. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTangent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>aa487780da29dba3eca8418b4c0844aa8</Anchor>
    <Abstract>Returns tangent vector in last time evaluate called. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTangent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a7c4617c3d3013468681c52b6bc9e98e4</Anchor>
    <Abstract>Returns tangent vector between between two times given. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>angleBetweenPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a87fc1a5170cff03e5ad98a342fb90635</Anchor>
    <Abstract>Returns interpolated angle between last and current time. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>angleBetweenPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>aa822da5a902625ec40a05eba02d74407</Anchor>
    <Abstract>Returns interpolated angle between last and current time. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_catmullRom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a794dc96a8865509963c24a74c9a511f3</Anchor>
    <Abstract>Evaluate catmull rom spline with 4 given values and time. </Abstract>
    <DeclaredIn>Spline.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_points</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a58f4f72ac4fd09fe3774abc7e2418915</Anchor>
    <Abstract>List of points who defineds the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_currentdt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a4aaf4b09734a33af0ab4210d74f7443f</Anchor>
    <Abstract>Current time used (default = 0.0f) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_olddt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>reto::Spline</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_spline.html</Path>
    <Anchor>a3f365d66eefc031e38128bc9250edf53</Anchor>
    <Abstract>Last time used (default = 0.0f) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Texture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Abstract>Abstract class to manage texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ab44d7032fc92c196e23f4663d12dc440</Anchor>
    <Abstract>Method to bind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a235bbd69b497fbd1eb45035e028e4b2c</Anchor>
    <Abstract>Method to unbind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af008efdca65f3000b6cccf89f4947624</Anchor>
    <Abstract>Method to get texture raw id. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a41af21d730286952fae86a1a22c08cac</Anchor>
    <Abstract>Method to get texture target. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af9beaf4ac7830dd8a66ec395b179e3ea</Anchor>
    <Abstract>Method to check if texture was loaded. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a68d7eae31b329e9b44ef4dc346bb4f47</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ac52cf64566a1a6c94da9429cfcad12f5</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Texture1D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Texture1D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture1_d.html</Path>
    <Abstract>Class to manage 1D textures. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture1D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture1_d.html</Path>
    <Anchor>a3f0cacc6236eef483cf1e4ccf141bf0b</Anchor>
    <Abstract>Method to update texture content. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ab44d7032fc92c196e23f4663d12dc440</Anchor>
    <Abstract>Method to bind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a235bbd69b497fbd1eb45035e028e4b2c</Anchor>
    <Abstract>Method to unbind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af008efdca65f3000b6cccf89f4947624</Anchor>
    <Abstract>Method to get texture raw id. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a41af21d730286952fae86a1a22c08cac</Anchor>
    <Abstract>Method to get texture target. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af9beaf4ac7830dd8a66ec395b179e3ea</Anchor>
    <Abstract>Method to check if texture was loaded. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a68d7eae31b329e9b44ef4dc346bb4f47</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ac52cf64566a1a6c94da9429cfcad12f5</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Texture2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture2_d.html</Path>
    <Abstract>Class to manage 2D textures. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture2_d.html</Path>
    <Anchor>ac38a2ad9ef29ed5e1c8a9f8ba833a955</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture2D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture2_d.html</Path>
    <Anchor>aaed7925e2f93b797ee8c802f78093ffe</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ab44d7032fc92c196e23f4663d12dc440</Anchor>
    <Abstract>Method to bind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a235bbd69b497fbd1eb45035e028e4b2c</Anchor>
    <Abstract>Method to unbind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af008efdca65f3000b6cccf89f4947624</Anchor>
    <Abstract>Method to get texture raw id. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a41af21d730286952fae86a1a22c08cac</Anchor>
    <Abstract>Method to get texture target. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af9beaf4ac7830dd8a66ec395b179e3ea</Anchor>
    <Abstract>Method to check if texture was loaded. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Texture2DArray</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Texture2DArray</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture2_d_array.html</Path>
    <Abstract>Class to manage 2D array textures. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ab44d7032fc92c196e23f4663d12dc440</Anchor>
    <Abstract>Method to bind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a235bbd69b497fbd1eb45035e028e4b2c</Anchor>
    <Abstract>Method to unbind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af008efdca65f3000b6cccf89f4947624</Anchor>
    <Abstract>Method to get texture raw id. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a41af21d730286952fae86a1a22c08cac</Anchor>
    <Abstract>Method to get texture target. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af9beaf4ac7830dd8a66ec395b179e3ea</Anchor>
    <Abstract>Method to check if texture was loaded. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a68d7eae31b329e9b44ef4dc346bb4f47</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ac52cf64566a1a6c94da9429cfcad12f5</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Texture3D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Texture3D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture3_d.html</Path>
    <Abstract>Class to manage 3D textures. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>update</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture3D</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture3_d.html</Path>
    <Anchor>ad30c3a206bfdac1dc7174a78061675b8</Anchor>
    <Abstract>Method to update texture content. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ab44d7032fc92c196e23f4663d12dc440</Anchor>
    <Abstract>Method to bind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>unbind</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a235bbd69b497fbd1eb45035e028e4b2c</Anchor>
    <Abstract>Method to unbind this texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>handler</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af008efdca65f3000b6cccf89f4947624</Anchor>
    <Abstract>Method to get texture raw id. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>target</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a41af21d730286952fae86a1a22c08cac</Anchor>
    <Abstract>Method to get texture target. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLoaded</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>af9beaf4ac7830dd8a66ec395b179e3ea</Anchor>
    <Abstract>Method to check if texture was loaded. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>a68d7eae31b329e9b44ef4dc346bb4f47</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::Texture</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture.html</Path>
    <Anchor>ac52cf64566a1a6c94da9429cfcad12f5</Anchor>
    <Abstract>Method to resize texture. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::TextureConfig</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::TextureConfig</Scope>
    </TokenIdentifier>
    <Path>structreto_1_1_texture_config.html</Path>
    <Abstract>Auxiliar struct that contains sampler texture configuration. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::TextureManager</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::TextureManager</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture_manager.html</Path>
    <Abstract>Class to manage all textures from application. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>add</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TextureManager</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture_manager.html</Path>
    <Anchor>ad7356614540b4b06f5e27a8888f665a9</Anchor>
    <Abstract>Method to add new texture to TextureManager. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>remove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TextureManager</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture_manager.html</Path>
    <Anchor>a1e00e2e34d8a709c7bfda71facb96d6c</Anchor>
    <Abstract>Method to remove a texture from TextureManager. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>get</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TextureManager</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_texture_manager.html</Path>
    <Anchor>aab4cfb5668185fe55321da87b20b3482</Anchor>
    <Abstract>Method to get a texture from TextureManager. </Abstract>
    <DeclaredIn>TextureManager.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::TransformFeedback</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Abstract>Class to manage transform feedbacks. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TransformFeedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Anchor>ab30d512eedf0b650adecee47a8f8890e</Anchor>
    <Abstract>TransformFeedback constructor. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TransformFeedback</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Anchor>a81cb0b5fa8052737b35e2be544fdd39d</Anchor>
    <Abstract>TransformFeedback destructor. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Anchor>a846eb7ca4a4725611c33709e9b16e0ed</Anchor>
    <Abstract>Method to draw transform feedback. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Anchor>a760f5559e4a564b75a7cf76b02d3722a</Anchor>
    <Abstract>Method to add a pickable object. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Anchor>aff5e8884303dc6642f1e5d740ae1cce8</Anchor>
    <Abstract>Method to remove a pickable object. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>program</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Anchor>a3509d9609c60292b2f36e5f8bb696eb0</Anchor>
    <Abstract>Method to get program handler. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::TransformFeedback</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_transform_feedback.html</Path>
    <Anchor>a2bc27e3c9a8e1aceadd3e8bc4165c32d</Anchor>
    <Abstract>Method to clear transform feedback. </Abstract>
    <DeclaredIn>TransformFeedback.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Abstract>Information about the current ReTo version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>aef6317bf59e4d6916b6d3653e00757d4</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>a2ea8c46b55ee6b4f7cf111a50c778849</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>a82b747b1dac95777d486ca13157607ef</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>a1e6d97763ee2268c58278df31a19bd46</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>ada656883424a920873f1e71dea36ac91</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>aecee377b8d59f79e9e748eba7edfdea0</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>a583c91b7162b44c306124e0fc3e8f71c</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>a686d181dfc6e7da0fc7a9100655b55a6</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>a675da79a8eb08e6d3cb72d10df5660b7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>reto::Version</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_version.html</Path>
    <Anchor>a12228648dd99c503cf27c98feb97d7f7</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::SelectionSystem::Lasso</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Abstract>Class to manage lasso selection. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lasso</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a846dc81977b332ea80896d38ac0724bb</Anchor>
    <Abstract>Lasso constructor. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Lasso</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a9003d22e0a692bbce2d59f5287b5fe7e</Anchor>
    <Abstract>Lasso destructor. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a113312a687f195a514e7c15d38501762</Anchor>
    <Abstract>Method to set the selection color. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLineWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a00aa0ce50190ab5ba0f578c32800b214</Anchor>
    <Abstract>Method to set the width of the border line of the selection. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>ad6aab249f7c1191209dcf448276c9600</Anchor>
    <Abstract>Method used on resize callback to change width and height for calculating points. ...</Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a27af7069ae59fb9b6bb59a5fb6c66009</Anchor>
    <Abstract>Method to draw lasso. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseDown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a913c87052a355b2fb65ba0d895f66633</Anchor>
    <Abstract>Method used on mouse down callback to get a point. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseMove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a9e31230f23713cbba8455125f0b6d83f</Anchor>
    <Abstract>Method used on mouse move callback to get the a point. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a904d7cd2a1e3a22b4f135c3ccb765108</Anchor>
    <Abstract>Method used on mouse up callback to get the a point, call to transform feedback and clear points...</Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>programLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>ac7c52895f8872e5f3cd228ad06b3ceb5</Anchor>
    <Abstract>Method to get program handler for line. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>programFilling</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a5fbc5767a4568bb3fd3a1d824167baba</Anchor>
    <Abstract>Method to get program handler for filling. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a255dcff8c95dc4e14d0fa7990c4e8401</Anchor>
    <Abstract>Method to add a pickable object. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::Lasso</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_lasso.html</Path>
    <Anchor>a0942ef177a48bc57b002bc1df2cd01e2</Anchor>
    <Abstract>Method to remove a pickable object. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reto::SelectionSystem::RubberBand</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Abstract>Class to manage rubberband selection. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RubberBand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>a4cfb9e79d6e2977bbdd216f6e3fc7565</Anchor>
    <Abstract>RubberBand constructor. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~RubberBand</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>a9df2088eba930f3507547b87db6f5075</Anchor>
    <Abstract>Rubberband destructor. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>ae2257d7a1a21ca4be68f42693223dda1</Anchor>
    <Abstract>Method to set the selection color. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLineWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>ac7e3c8484ba4584cb4308a6e3af50b59</Anchor>
    <Abstract>Method to set the width of the border line of the selection. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>aa485fd930e3ccf96a5f8b5bab8d8e16e</Anchor>
    <Abstract>Method used on resize callback to change width and height for calculating points. ...</Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>draw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>ad29d0109a76080a60f5b968182459e67</Anchor>
    <Abstract>Method to draw rubberband. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseDown</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>a795cdfac7a8dd96717b97575210b2864</Anchor>
    <Abstract>Method used on mouse down callback to get a point. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseMove</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>a6d653b9f9ea236c86847121f31eb4982</Anchor>
    <Abstract>Method used on mouse move callback to get the a point. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mouseUp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>af946fe3076aa4397b5ab2f5395f5fee8</Anchor>
    <Abstract>Method used on mouse up callback to get the a point, call to transform feedback and clear points...</Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>program</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>ab1462eebbcdecd9ca585b1c968e09e7d</Anchor>
    <Abstract>Method to get program handler for line and filling. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>a83325142206a052ead8589935b2f6488</Anchor>
    <Abstract>Method to add a pickable object. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>reto::SelectionSystem::RubberBand</Scope>
    </TokenIdentifier>
    <Path>classreto_1_1_selection_system_1_1_rubber_band.html</Path>
    <Anchor>abd0b0354df983b47948b1663b6c771b7</Anchor>
    <Abstract>Method to remove a pickable object. </Abstract>
    <DeclaredIn>SelectionSystem.h</DeclaredIn>
  </Token>
</Tokens>
