<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_MAJOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>abd74649f94f1eb6b51fb9f2112cc617c</Anchor>
    <Abstract>The current major version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_MINOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a3eee9ab0b7227b07135f5ea9504fa420</Anchor>
    <Abstract>The current minor version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_PATCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a2fd67cab8e04a402a8e894e4d3e109f3</Anchor>
    <Abstract>The current patch level. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_REVISION</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a3f8599b5305e4e2717c7d6306f8c4e47</Anchor>
    <Abstract>The current SCM revision. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_ABI</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a4132e53bb5854b95bdadfb13ca187959</Anchor>
    <Abstract>The current binary interface. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a002f688ae6a4814608852b50404a6065</Anchor>
    <Abstract>The current major.minor.version as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_REV_STRING</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>ad17e5d0c5af7dcad8a7784910834a250</Anchor>
    <Abstract>The current major.minor.version.revision as a string. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_GT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a8371753ba33f5b41d824035bb43c8da7</Anchor>
    <Abstract>True if the current version is newer than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_GE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a7b352fe9cdd2338ee87ae3cc87c16bca</Anchor>
    <Abstract>True if the current version is equal or newer to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_LT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a55ad1b9cc7e5c5b9d9d4bdb73327fa8e</Anchor>
    <Abstract>True if the current version is older than the given one. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSOL_VERSION_LE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>version_8h.html</Path>
    <Anchor>a83ece8f733dcd0d841b26d7dcdd848f5</Anchor>
    <Abstract>True if the current version is older or equal to the given. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SectionCachedStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>class_section_cached_stats.html</Path>
    <Abstract>This class allows to cache the stats for sections. </Abstract>
    <DeclaredIn>NeuronMorphologySectionCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SectionStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SectionStats</Scope>
    </TokenIdentifier>
    <Path>class_section_stats.html</Path>
    <Abstract>This class allows to compute stats for sections. </Abstract>
    <DeclaredIn>NeuronMorphologySectionStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::AscReaderTemplated</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
    <Anchor>ac5de4eb6120afd1ccffe4f92faf63e56</Anchor>
    <Abstract>Creates a new Neuron that contains the NeuronMorphology described in an ASC file Calls readMorphology...</Abstract>
    <DeclaredIn>AscReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMorphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
    <Anchor>a7f6d9b1f3ebdf7ca0f1afb27776210fd</Anchor>
    <Abstract>Creates a NeuronMorphology and loads info described in ASC file. </Abstract>
    <DeclaredIn>AscReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ReadNeurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
    <Anchor>a71f3821d3a72b8b7d0d94543ca937678</Anchor>
    <Abstract>Reads a Neurite from an ASC file. </Abstract>
    <DeclaredIn>AscReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ReadSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
    <Anchor>aa917570e6a786305c1d1537f44ec44c2</Anchor>
    <Abstract>Reads soma points from an ASC file. </Abstract>
    <DeclaredIn>AscReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_countBrackets</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
    <Anchor>a91857a0a585bec1bde3b28b8ef5f338e</Anchor>
    <Abstract>Calculates the total amount of opening minus closing brackets. </Abstract>
    <DeclaredIn>AscReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_eraseComent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
    <Anchor>a5aee792729930959cd566911847c0f12</Anchor>
    <Abstract>Modifies a string by removing any comments there may be (after &amp;#39;;&amp;#39; character) </Abstract>
    <DeclaredIn>AscReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_parseDataLine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::AscReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_asc_reader_templated.html</Path>
    <Anchor>aa8a8feb8a570d27c3adbad3715645419</Anchor>
    <Abstract>Creates a new NodePtr using the information contained in a data line. </Abstract>
    <DeclaredIn>AscReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Axon</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Axon</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_axon.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>ad8d726344f722fd1f048e5953d25f6fc</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::AxonCachedStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::AxonCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_axon_cached_stats.html</Path>
    <Abstract>This class allows to compute stats for axons. </Abstract>
    <DeclaredIn>AxonCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>abe3737a0ed3966ea68a4b6daed5fed43</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a64fe3cdd2f15d9252f10fd4aef9356ef</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a3d4fa476544ba2ed08e9eacbe0681d6d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuriteCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a1d6b098291001831ed184b125ac86d5e</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a2a8e05f4fa40c53859946db8b8b90688</Anchor>
    <Abstract>Set dirty a cached stat and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a37d3ab146760e69bf89a204583f4d07a</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>aa0d96c2a3b8df0b8c1ca8e4e80c767fe</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a341437d9c1a50ab456bf0ddb36faa98e</Anchor>
    <Abstract>Returns the stat given if the cache is clean and if it is dirty then computes the stat and stores the...</Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_values</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Cached&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Anchor>a2fd4f3362af9a0c519d6a23411e3350e</Anchor>
    <Abstract>Container of the cached values. Is mutable to allow const methods to modify the cache if needed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::AxonStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::AxonStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_axon_stats.html</Path>
    <Abstract>This class allows to compute stats for axons. </Abstract>
    <DeclaredIn>AxonStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>abe3737a0ed3966ea68a4b6daed5fed43</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a64fe3cdd2f15d9252f10fd4aef9356ef</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a03b9faca92194eb69af5d3a6d0eb0cf0</Anchor>
    <Abstract>Computes the stat given. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Cached</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>nsol::Cached</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Abstract>This class allows to cache values. </Abstract>
    <DeclaredIn>Cached.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_values</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Cached</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Anchor>a2fd4f3362af9a0c519d6a23411e3350e</Anchor>
    <Abstract>Container of the cached values. Is mutable to allow const methods to modify the cache if needed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Circuit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Abstract>A class to represent connections between neurons. TODO: extend long description. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>aaac4e810e4908e635c44e464a301e29c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>a4b8ee36b2c9b9a24954997fa25ce5230</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addSynapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>ac7ac7d0caf266d8804a8b1b88834842e</Anchor>
    <Abstract>Method to add a connection into the cirtuit. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>afd0ec5cfe28ba26432930e9f9cca3d0b</Anchor>
    <Abstract>Method to clear all the connections of all the circuit. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfSynapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>adcaa1f48d005aab4ecedd937cae9d4a5</Anchor>
    <Abstract>Method to get the total number of connections of the circuit. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>a46c0bc265c160a639832750d81030710</Anchor>
    <Abstract>Method to get all the synapses from the circuit. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>a406adfe56423a4c73942f6e9c08716ee</Anchor>
    <Abstract>Method to get all the synapses from the circuit. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>a94538d202cb2ec895f9d115df16300f8</Anchor>
    <Abstract>Method to get all the sinapses of the neuron into the circuit. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>a60d3967b2ad2ab0879a5bdb13ed8b595</Anchor>
    <Abstract>Method to get all the sinapses from a subset of neurons. </Abstract>
    <DeclaredIn>Circuit.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_synapses</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>a5e9ac3d6f02975feabba2ab59aa8e82e</Anchor>
    <Abstract>Container with all the connections between neurons. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_preSynapticConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>a32c48c840dee3c8f7abfd32100421c05</Anchor>
    <Abstract>Container with all the efferents connections into the circuit. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_postSynapticConnections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Circuit</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuit.html</Path>
    <Anchor>abdd67c2f2a10a7e44f16db6a0a510231</Anchor>
    <Abstract>Container with all the afferents connections into the circuit. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Circuits</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Circuits</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_circuits.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Column</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Abstract>A class to represent columns. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>aa17e9032236264d11dd085e49cf66420</Anchor>
    <Abstract>Method to get the number of neurons in the column. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>ae7ac921585096c61cd4a15304031d1cb</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a5b04a74a3076653caf02bfdb518b2b69</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a4e1122e7bbd9dde8167f86224133022a</Anchor>
    <Abstract>Default destructur. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a5bafe196f4d97ff12dc486b8b206682b</Anchor>
    <Abstract>Returns object as MiniColumnStats. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>aab583fea99852e1f1b0b0726c5f02c96</Anchor>
    <Abstract>Method to get-set the column id. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a4e8fada2de8a3fcadb3c53c565d4f6c6</Anchor>
    <Abstract>Method to get the column id. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a379ee5c10e1a3df331c7fac161d2e0a0</Anchor>
    <Abstract>Method to add a mini column. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeMiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>af558800d51f1fd7bdae3201bceb1cd73</Anchor>
    <Abstract>Method to remove a mini column. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearMiniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>acad36437f8a03d9833fa66df0696d9b2</Anchor>
    <Abstract>Method to clear mini columns. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>miniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>acc585835128a09f9664d52187aa944f0</Anchor>
    <Abstract>Method to get minicolumns. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>miniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a2ace99f343ee8f73102576d2f486108b</Anchor>
    <Abstract>Method to get minicolumns as const. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfMiniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>ab1e6850552ba3dcf5896579daf58ba09</Anchor>
    <Abstract>Method to get the number of minicolumns. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a73f9542b72de036ab284a66b16d5949a</Anchor>
    <Abstract>Identifier of the column. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_miniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>afadac0129e946261d96b94ca12985fa7</Anchor>
    <Abstract>Container of minicolumns. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Columns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Columns</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_columns.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::ColumnStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::ColumnStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column_stats.html</Path>
    <Abstract>This class allows to compute stats for sections. </Abstract>
    <DeclaredIn>ColumnStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::ColumnStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column_stats.html</Path>
    <Anchor>a0bef4d483575dffd91bb73b34f364312</Anchor>
    <Abstract>Returns object as ColumnStats. </Abstract>
    <DeclaredIn>ColumnStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>aa17e9032236264d11dd085e49cf66420</Anchor>
    <Abstract>Method to get the number of neurons in the column. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>ae7ac921585096c61cd4a15304031d1cb</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a5b04a74a3076653caf02bfdb518b2b69</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a4e1122e7bbd9dde8167f86224133022a</Anchor>
    <Abstract>Default destructur. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>aab583fea99852e1f1b0b0726c5f02c96</Anchor>
    <Abstract>Method to get-set the column id. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a4e8fada2de8a3fcadb3c53c565d4f6c6</Anchor>
    <Abstract>Method to get the column id. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a379ee5c10e1a3df331c7fac161d2e0a0</Anchor>
    <Abstract>Method to add a mini column. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeMiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>af558800d51f1fd7bdae3201bceb1cd73</Anchor>
    <Abstract>Method to remove a mini column. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearMiniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>acad36437f8a03d9833fa66df0696d9b2</Anchor>
    <Abstract>Method to clear mini columns. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>miniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>acc585835128a09f9664d52187aa944f0</Anchor>
    <Abstract>Method to get minicolumns. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>miniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a2ace99f343ee8f73102576d2f486108b</Anchor>
    <Abstract>Method to get minicolumns as const. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfMiniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>ab1e6850552ba3dcf5896579daf58ba09</Anchor>
    <Abstract>Method to get the number of minicolumns. </Abstract>
    <DeclaredIn>Column.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>a73f9542b72de036ab284a66b16d5949a</Anchor>
    <Abstract>Identifier of the column. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_miniColumns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Column</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_column.html</Path>
    <Anchor>afadac0129e946261d96b94ca12985fa7</Anchor>
    <Abstract>Container of minicolumns. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::DataSet</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::DataSet</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_data_set.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_columns</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::DataSet</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_data_set.html</Path>
    <Anchor>a63f726bd7cce25abf0d998b6bc3aa22e</Anchor>
    <Abstract>Entry for cortical hierarchy in form o a container of cortial columns. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_circuit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::DataSet</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_data_set.html</Path>
    <Anchor>ab04ef6414e126bc686e932d80584f356</Anchor>
    <Abstract>Entry for connections of the circuit. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::DataSet</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_data_set.html</Path>
    <Anchor>a9fc18e1a984c2961923de201a86eb20f</Anchor>
    <Abstract>Container of neurons by its gid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_morphologies</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::DataSet</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_data_set.html</Path>
    <Anchor>a08013133a72ba47bedbb1b2c2d2d395d</Anchor>
    <Abstract>Map of the paths of morphologies. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Dendrite</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TDendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a15db6983674e020c1032bc8cd2457629</Anchor>
    <Abstract>Type of dendrite. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a9709fa2e8006c6f490be36294c69d630</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Dendrite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>ad8d726344f722fd1f048e5953d25f6fc</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_dendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a2e952e6f4b5b6e339d57c4a50df215d7</Anchor>
    <Abstract>Type of dendrite. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::DendriteCachedStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::DendriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite_cached_stats.html</Path>
    <Abstract>This class allows to compute stats for dendrites. </Abstract>
    <DeclaredIn>DendriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::DendriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite_cached_stats.html</Path>
    <Anchor>a27ca2ec2adbd1008e38166336a2dbb18</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>DendriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a9709fa2e8006c6f490be36294c69d630</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Dendrite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>abe3737a0ed3966ea68a4b6daed5fed43</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a3d4fa476544ba2ed08e9eacbe0681d6d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuriteCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a1d6b098291001831ed184b125ac86d5e</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a2a8e05f4fa40c53859946db8b8b90688</Anchor>
    <Abstract>Set dirty a cached stat and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a37d3ab146760e69bf89a204583f4d07a</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>aa0d96c2a3b8df0b8c1ca8e4e80c767fe</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a341437d9c1a50ab456bf0ddb36faa98e</Anchor>
    <Abstract>Returns the stat given if the cache is clean and if it is dirty then computes the stat and stores the...</Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TDendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a15db6983674e020c1032bc8cd2457629</Anchor>
    <Abstract>Type of dendrite. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_dendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a2e952e6f4b5b6e339d57c4a50df215d7</Anchor>
    <Abstract>Type of dendrite. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_values</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Cached&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Anchor>a2fd4f3362af9a0c519d6a23411e3350e</Anchor>
    <Abstract>Container of the cached values. Is mutable to allow const methods to modify the cache if needed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Dendrites</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Dendrites</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrites.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::DendriteStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::DendriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite_stats.html</Path>
    <Abstract>This class allows to compute stats for dendrites. </Abstract>
    <DeclaredIn>DendriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a9709fa2e8006c6f490be36294c69d630</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Dendrite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>abe3737a0ed3966ea68a4b6daed5fed43</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a64fe3cdd2f15d9252f10fd4aef9356ef</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a03b9faca92194eb69af5d3a6d0eb0cf0</Anchor>
    <Abstract>Computes the stat given. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TDendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a15db6983674e020c1032bc8cd2457629</Anchor>
    <Abstract>Type of dendrite. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_dendriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Dendrite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_dendrite.html</Path>
    <Anchor>a2e952e6f4b5b6e339d57c4a50df215d7</Anchor>
    <Abstract>Type of dendrite. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::ImportanceNode</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::ImportanceNode</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_importance_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Node</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node.html</Path>
    <Anchor>a16f9963793a795009ccde99390b3e1e4</Anchor>
    <Abstract>Set the node id. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Node</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node.html</Path>
    <Anchor>aa64417c3d40d09af4ab6efcb5efc66aa</Anchor>
    <Abstract>Get the node id. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Log</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Abstract>Static class to log output. </Abstract>
    <DeclaredIn>Log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLogLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>ad7eac896b73396094a629d2476eb8425</Anchor>
    <Abstract>Set current log level. </Abstract>
    <DeclaredIn>Log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>ae32e5d45e9c3fbf60b16a27ba20abf78</Anchor>
    <Abstract>Get current log level. </Abstract>
    <DeclaredIn>Log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>a28d69229997601a19e91c407052404fc</Anchor>
    <Abstract>Set current output stream. </Abstract>
    <DeclaredIn>Log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>acd48f4844b8c09d38722db136e0c8932</Anchor>
    <Abstract>Get current output stream. </Abstract>
    <DeclaredIn>Log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>log</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>a6a6ec07043dc22077331ebc692ae0dc5</Anchor>
    <Abstract>Method to log out a message in a specific level. </Abstract>
    <DeclaredIn>Log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>log</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>a61ea0de236003499dcdf699496f4faea</Anchor>
    <Abstract>Method to log out a message in a specific level to a specific stream. </Abstract>
    <DeclaredIn>Log.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_logLevel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>a448d27236b3ff39b4517bc567d18cdec</Anchor>
    <Abstract>Current log level. This can be overwritten with proper value assigned to environment variable NSOL_LO...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_stream</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Log</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_log.html</Path>
    <Anchor>a2860b9449bff08fda23fb8158a0199e1</Anchor>
    <Abstract>Current stream to write log to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::MiniColumn</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Abstract>A class to represent minicolumns. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a674bc094ec19d1ee960cb826ed12264f</Anchor>
    <Abstract>Returns object as MiniColumnStats. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>adbcf93e38fd164aa939f6805b101753c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ab3cd07302615028c2574364290d87cf0</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a47e53ce2eb422d1f59f8c6abbfb2d063</Anchor>
    <Abstract>Default destructur. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ab04343b7ecf1c40bdc7e86cdc10e5ab5</Anchor>
    <Abstract>Method to get-set mini column id. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ab4f1bf8da084a86d007b5737252b56e7</Anchor>
    <Abstract>Method to get the column id as const. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ae09eb46a1414518a74f0e43e9db5b572</Anchor>
    <Abstract>Method to set the column of this minicolumn. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>aeaaca176f6af030a7dacba6e3a9c6440</Anchor>
    <Abstract>Method to get the column of this minicolumn. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>aa7acdaf6a1123ff50b538df0ee47af34</Anchor>
    <Abstract>Method to add a neuron. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a35291c42631f469cf8014ddffe1ce8e6</Anchor>
    <Abstract>Method to remove a neuron. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>aa3763a6d12e098a7b4125f7687c91bdf</Anchor>
    <Abstract>Method to get neurons. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>adfe3e57aa061ca4733b0497137dd1975</Anchor>
    <Abstract>Method to get neurons. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a01d63a621337743a1e098c3ebebcb210</Anchor>
    <Abstract>Method to clear the neurons container. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a3051d2b507daf0d82e6699e25dfeb35b</Anchor>
    <Abstract>Method to get the number of neurons in the minicolumn. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a6fea3852e82821e11cfbcb9b90dd7dbf</Anchor>
    <Abstract>id of this minicolumn </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a72598fe684186167132b7879e5cc9767</Anchor>
    <Abstract>Pointer to the column this minicolumn belogns to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a5897e1c1a73ac8ad9f03543bdef7a114</Anchor>
    <Abstract>! Container of the neurons of this minicolumn </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::MiniColumns</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::MiniColumns</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_columns.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::MiniColumnStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::MiniColumnStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column_stats.html</Path>
    <Abstract>This class allows to compute stats for sections. </Abstract>
    <DeclaredIn>MiniColumnStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumnStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column_stats.html</Path>
    <Anchor>ad19177be54ee76e59cf89c730150b537</Anchor>
    <Abstract>Returns object as MiniColumnStats. </Abstract>
    <DeclaredIn>MiniColumnStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>adbcf93e38fd164aa939f6805b101753c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ab3cd07302615028c2574364290d87cf0</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MiniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a47e53ce2eb422d1f59f8c6abbfb2d063</Anchor>
    <Abstract>Default destructur. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ab04343b7ecf1c40bdc7e86cdc10e5ab5</Anchor>
    <Abstract>Method to get-set mini column id. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ab4f1bf8da084a86d007b5737252b56e7</Anchor>
    <Abstract>Method to get the column id as const. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>ae09eb46a1414518a74f0e43e9db5b572</Anchor>
    <Abstract>Method to set the column of this minicolumn. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>aeaaca176f6af030a7dacba6e3a9c6440</Anchor>
    <Abstract>Method to get the column of this minicolumn. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>aa7acdaf6a1123ff50b538df0ee47af34</Anchor>
    <Abstract>Method to add a neuron. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a35291c42631f469cf8014ddffe1ce8e6</Anchor>
    <Abstract>Method to remove a neuron. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>aa3763a6d12e098a7b4125f7687c91bdf</Anchor>
    <Abstract>Method to get neurons. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>adfe3e57aa061ca4733b0497137dd1975</Anchor>
    <Abstract>Method to get neurons. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clearNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a01d63a621337743a1e098c3ebebcb210</Anchor>
    <Abstract>Method to clear the neurons container. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfNeurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a3051d2b507daf0d82e6699e25dfeb35b</Anchor>
    <Abstract>Method to get the number of neurons in the minicolumn. </Abstract>
    <DeclaredIn>MiniColumn.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a6fea3852e82821e11cfbcb9b90dd7dbf</Anchor>
    <Abstract>id of this minicolumn </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_column</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a72598fe684186167132b7879e5cc9767</Anchor>
    <Abstract>Pointer to the column this minicolumn belogns to. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neurons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MiniColumn</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_mini_column.html</Path>
    <Anchor>a5897e1c1a73ac8ad9f03543bdef7a114</Anchor>
    <Abstract>! Container of the neurons of this minicolumn </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Morphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Morphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Morphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology.html</Path>
    <Anchor>a8a99efdec2d9d5880b5ea9f324e94228</Anchor>
    <Abstract>Morphology sections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::MorphologySynapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MorphologySynapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a0dfe5d8fab421a1b1ac50af4a50261e3</Anchor>
    <Abstract>Default MorphologySynapse constructor. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MorphologySynapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a9303f7775282fade6e2f1fcd64c8b8a0</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~MorphologySynapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a3cc10831993149af6631d016187ad204</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a54d3ed66255ae0a1cfb368f385387a8f</Anchor>
    <Abstract>GID getter. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a18074dd5a33c66f523b74b492fcc69f7</Anchor>
    <Abstract>GID setter. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>synapseType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>ab59e1a084bd529ce7e38f839ee27f292</Anchor>
    <Abstract>Method to get the type of the synapse. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>ae0cb8f3df155aff1e474e8335f0b3566</Anchor>
    <Abstract>Method to get the presynaptic surface position. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a8e6e5b9dc8f939c50f18ed7c3d09e123</Anchor>
    <Abstract>Method to set presynaptic surface position to the synapse. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a622be191d7f41382c1959d947430da57</Anchor>
    <Abstract>Method to get the postsynaptic surface position. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a2cdda9ff05abcd392b3888c2d8d02894</Anchor>
    <Abstract>Method to set postsynaptic surface position to the synapse. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>ad33d55bebbf37ed6df6ad9ef6fe94457</Anchor>
    <Abstract>Method to add a presynaptic section to the synapse. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>ad55a9cc03a6ed9d436e3d3bb7a9d5441</Anchor>
    <Abstract>Method to get the presynaptic section. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a6bd6944c776575db9c3a8ecf31c58cff</Anchor>
    <Abstract>Method to add a postsynaptic section to the synapse. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>af9fd95def1733ef85bbd84f96f7c1ade</Anchor>
    <Abstract>Method to get the postsynaptic section. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>ac384b5ed1ec8083a3d980026e074fdfb</Anchor>
    <Abstract>Operator =. </Abstract>
    <DeclaredIn>MorphologySynapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a4ba31e16f138d6f1155d8cdd1873cf2e</Anchor>
    <Abstract>Default Synapse constructor. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>adc4a39a74ed432f01d06dc7037bc726e</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ac01670285dde8138d80fe464faa21808</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ad4260ff1384d1696ff75743a4fec6b11</Anchor>
    <Abstract>Method to get the gid of the presynaptic neuron. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ad4da3f321122f1db59a1e4da13d3d1b2</Anchor>
    <Abstract>Method to add a presynaptic neuron to the synapse. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ae4ee1b2a6ceaedae83d869124ce49ea5</Anchor>
    <Abstract>Method to get the gid of the postsynaptic neuron. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ade78167bdbed82f2033865d7e1b90359</Anchor>
    <Abstract>Method to add a postsynaptic neuron to the synapse. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a654bbf46033fef519c6491be6de07425</Anchor>
    <Abstract>Method to set the synaptic weight. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>abafc0244647522496922b04f8e6cb2e1</Anchor>
    <Abstract>Method to get the synaptic weight. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a16487c87194c96d3473c4cc35d2513fe</Anchor>
    <Abstract>Operator =. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_gid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a55d1fb2c773d07c9ae4f29875d5075c6</Anchor>
    <Abstract>Synapse GID (default value zero) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_preSynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>aeddd685156eb258e92796f1ce8bf7190</Anchor>
    <Abstract>Presynaptic surface position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_postSynapticSurfacePosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a911793a9ad2b67577c4af466cabda944</Anchor>
    <Abstract>Postsynaptic surface position. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_preSynapticSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>ab7dc8d95d05c44fe26ec13085e73544d</Anchor>
    <Abstract>Section of a presynaptic neuron (neurite) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_postSynapticSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::MorphologySynapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology_synapse.html</Path>
    <Anchor>a3bfe8dd82fd434e602c123ec121c14bb</Anchor>
    <Abstract>Section of a postsynaptic neuron (neurite) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_preSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a34d6d7f8f62e3161077c7401d0e7e84a</Anchor>
    <Abstract>GID Presynaptic neuron. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_postSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a9a87e64d755819fdee95c0c1f159474b</Anchor>
    <Abstract>GID Postsynaptic neuron. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_weight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>afd87526866e98c77db610ec3af447bc0</Anchor>
    <Abstract>The synaptic weight. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Neurite</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>ad8d726344f722fd1f048e5953d25f6fc</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuriteCachedStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Abstract>This class allows to cache the stats for neurites. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a3d4fa476544ba2ed08e9eacbe0681d6d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuriteCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a1d6b098291001831ed184b125ac86d5e</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a2a8e05f4fa40c53859946db8b8b90688</Anchor>
    <Abstract>Set dirty a cached stat and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a37d3ab146760e69bf89a204583f4d07a</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>aa0d96c2a3b8df0b8c1ca8e4e80c767fe</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_cached_stats.html</Path>
    <Anchor>a341437d9c1a50ab456bf0ddb36faa98e</Anchor>
    <Abstract>Returns the stat given if the cache is clean and if it is dirty then computes the stat and stores the...</Abstract>
    <DeclaredIn>NeuriteCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>abe3737a0ed3966ea68a4b6daed5fed43</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a64fe3cdd2f15d9252f10fd4aef9356ef</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_values</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Cached&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Anchor>a2fd4f3362af9a0c519d6a23411e3350e</Anchor>
    <Abstract>Container of the cached values. Is mutable to allow const methods to modify the cache if needed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Neurites</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Neurites</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurites.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuriteStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Abstract>This class allows to compute stats for neurites. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuriteStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>abe3737a0ed3966ea68a4b6daed5fed43</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a64fe3cdd2f15d9252f10fd4aef9356ef</Anchor>
    <Abstract>Returns object as NeuriteStats. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStat</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuriteStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite_stats.html</Path>
    <Anchor>a03b9faca92194eb69af5d3a6d0eb0cf0</Anchor>
    <Abstract>Computes the stat given. </Abstract>
    <DeclaredIn>NeuriteStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a06b28c1cfac8493aa413104819a3286c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neuriteType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neurite</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurite.html</Path>
    <Anchor>a217ae876bd3162c751a1070d758f8601</Anchor>
    <Abstract>Get the type of neurite. </Abstract>
    <DeclaredIn>Neurite.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Neuron</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Abstract>A class to represent neurons. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a29aa5688d8524b9a96b0154f07b4d3cd</Anchor>
    <Abstract>Method to get the transformation matrix of the neuron. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>layer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a8b966e80f45c11f493a5c1497a1956a5</Anchor>
    <Abstract>Method to get-set the layer of the neuron. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a8afc950c57e22c17b1e66e0d942ade99</Anchor>
    <Abstract>Method to get-set the layer of the neuron. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>morphologicalType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a210b3b6b30fc59d1efdf04a43dab1261</Anchor>
    <Abstract>Method to get the neuron type based in morphology. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>functionalType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>adfde6cb81c44b191c3adbfe78c339c0c</Anchor>
    <Abstract>Method to get the neuron type based in functionality. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPyramidal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a6751e52ee672e3aa42f0463ea81da61d</Anchor>
    <Abstract>Method to know if the neuron is pyramidal type. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInterneuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>aac28e02936e13fb11afefb3704d9ee6b</Anchor>
    <Abstract>Method to know if the neuron is internuron type. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isExcitatory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a91842b6c8f7d5f07922a0a9ef6e9f4d7</Anchor>
    <Abstract>Method to know if the neuron is excitatory type. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInhibitory</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a97a60be15d68ec0a387faf2b8070a5bb</Anchor>
    <Abstract>Method to know if the neuron is inhibitory type. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typeToString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a043d845f042368bc4f318bab3c44bd30</Anchor>
    <Abstract>Returns the string of the given morphological type. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>typeToColor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a27334b29ec413a93ce89af1354d82045</Anchor>
    <Abstract>Returns the color assigned to the type. </Abstract>
    <DeclaredIn>Neuron.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_morphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a6e8c7eb6388f45f15f0c5be672c425c5</Anchor>
    <Abstract>Morphology pointer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_miniColumn</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>ad68ac847e77b8091cded8a5b67b5af3a</Anchor>
    <Abstract>Minicolumn pointer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_transform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>aab3d437209099d129a7e4a08fdc57957</Anchor>
    <Abstract>Matrix of global transformation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_layer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>aa51c2376a5fa63c19ac5c18d3f4b6b8c</Anchor>
    <Abstract>Layer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_gid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a5f46713fc6ff658a318a8f4a455519a3</Anchor>
    <Abstract>Unique id. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_morphologicalType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a7524d71e59338ca84b55b10d4e1974b5</Anchor>
    <Abstract>Type of neuron based in morphology. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_functionalType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>a4ef13478ab3b6f046f4b5f488c8d8381</Anchor>
    <Abstract>Type of neuron based in functionality. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UNDEFINED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>ad2da03ee73ac0881fee23382259898bda6bef19c1eeaf092aced6f783ed85fda2</Anchor>
    <Abstract>Type for undefined. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PYRAMIDAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>ad2da03ee73ac0881fee23382259898bdafc61522d0af0098efce3bfe3727a9239</Anchor>
    <Abstract>General pyramidal. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTERNEURON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>ad2da03ee73ac0881fee23382259898bda03f47a6b3e96e12410cee41cd077ba4c</Anchor>
    <Abstract>General interneuron. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BASKET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>ad2da03ee73ac0881fee23382259898bda937cf8ab2c537ac489e09be0f7010214</Anchor>
    <Abstract>Cerebellum interneurons. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PURKINJE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>nsol::Neuron</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron.html</Path>
    <Anchor>ad2da03ee73ac0881fee23382259898bda56589ca6a708463353de6e983d0fc4ec</Anchor>
    <Abstract>Other Cerebellum cells. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuronMorphology</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Abstract>A class to represent morphology of neurons. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a9eec549930c7a62dc5b621a9b9c488c1</Anchor>
    <Abstract>Default Neuron class constructor. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>soma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a623496f80a4f6f4539edf69929434ccd</Anchor>
    <Abstract>Method to set the neuronal soma. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>ae17e7244522c1d4eb43dc71c14af7e73</Anchor>
    <Abstract>Method to add a new neurite to the neuron. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a473b24bf42349f9719f730291c68bbf9</Anchor>
    <Abstract>Method to get all the dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basalDendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>af6df4ff3284339176ec79ebdfd717431</Anchor>
    <Abstract>Method to get all the basal dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apicalDendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a9446d39435740f6a1b356f114b996271</Anchor>
    <Abstract>Method to get all the apical dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apicalDendrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a3f81653ee6a9f5cd91882b2780deee1c</Anchor>
    <Abstract>Method to get the first apical dendrite. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>axons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>af65c1d879b4eea35fdda8b21a5e1e53d</Anchor>
    <Abstract>Method to get all the axons in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Morphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology.html</Path>
    <Anchor>a8a99efdec2d9d5880b5ea9f324e94228</Anchor>
    <Abstract>Morphology sections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuronMorphologyCachedStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuronMorphologyCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_cached_stats.html</Path>
    <Abstract>This class allows to cache the stats for neuronmorphologys. </Abstract>
    <DeclaredIn>NeuronMorphologyCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphologyCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologyCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_cached_stats.html</Path>
    <Anchor>aace5eb8efca2735dd5c0b3dd1dfe6666</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuronMorphologyCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuronMorphologyCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologyCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_cached_stats.html</Path>
    <Anchor>a88882b1d0d27d086b930cbd59200b32a</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuronMorphologyCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologyCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_cached_stats.html</Path>
    <Anchor>a2db3acd4052170bb77a95ab48f25d0ac</Anchor>
    <Abstract>Set dirty a cached stat and propagates dirty to parent neuronmorphology. </Abstract>
    <DeclaredIn>NeuronMorphologyCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologyCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_cached_stats.html</Path>
    <Anchor>aaf5a87f5ecfd72bae70b56823153f47d</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neuron morphology. </Abstract>
    <DeclaredIn>NeuronMorphologyCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologyStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_stats.html</Path>
    <Anchor>a03049607f9dc2d3cc2c0d88f48294f1c</Anchor>
    <Abstract>Returns object as NeuronMorphologyStats. </Abstract>
    <DeclaredIn>NeuronMorphologyStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a9eec549930c7a62dc5b621a9b9c488c1</Anchor>
    <Abstract>Default Neuron class constructor. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>soma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a623496f80a4f6f4539edf69929434ccd</Anchor>
    <Abstract>Method to set the neuronal soma. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>ae17e7244522c1d4eb43dc71c14af7e73</Anchor>
    <Abstract>Method to add a new neurite to the neuron. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a473b24bf42349f9719f730291c68bbf9</Anchor>
    <Abstract>Method to get all the dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basalDendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>af6df4ff3284339176ec79ebdfd717431</Anchor>
    <Abstract>Method to get all the basal dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apicalDendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a9446d39435740f6a1b356f114b996271</Anchor>
    <Abstract>Method to get all the apical dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apicalDendrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a3f81653ee6a9f5cd91882b2780deee1c</Anchor>
    <Abstract>Method to get the first apical dendrite. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>axons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>af65c1d879b4eea35fdda8b21a5e1e53d</Anchor>
    <Abstract>Method to get all the axons in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Morphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology.html</Path>
    <Anchor>a8a99efdec2d9d5880b5ea9f324e94228</Anchor>
    <Abstract>Morphology sections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_values</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Cached&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Anchor>a2fd4f3362af9a0c519d6a23411e3350e</Anchor>
    <Abstract>Container of the cached values. Is mutable to allow const methods to modify the cache if needed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuronMorphologySection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphologySection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>ac888dcb7c03bf7011ad6941f7f480f4f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuronMorphologySection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>add85fa692ab96f97fe31688f487dfb90</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a46036e293a5a9186eede80cdd93af7b1</Anchor>
    <Abstract>Method to get the gid of the neuron morphology section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a42b0e85d5c80c2e91d7d59057ab686a1</Anchor>
    <Abstract>Method to set the gid of the neuron morphology section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a34ad79e8f31819f2ea48590c42045632</Anchor>
    <Abstract>Gets the parent Neurite of the Neuron Morphology Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a0c8ba49058f56db2b5f037bac766184f</Anchor>
    <Abstract>Sets the parent neurite of this Neuron Morphology Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a2d81aca4e63a55e4baa8fba858fe5b47</Anchor>
    <Abstract>Gets the parent Section of this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>acd3ee1bd1a49d8a368582f9e85f9a54b</Anchor>
    <Abstract>Sets the parent Section of this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>af030677d04be9c658e69945723e832fc</Anchor>
    <Abstract>Adds child Section to this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>abc31d472107d4609a7f6e721860fed7f</Anchor>
    <Abstract>Return the children sections. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>afe89e932f7a0db23e63b3a5c80ad91e0</Anchor>
    <Abstract>Adds a Node at the end of Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a26edb3ce2d6d9e200b0971cad235c3cc</Anchor>
    <Abstract>Gets the first Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aa0059b91f0b2cc63e37d13b432849b6a</Anchor>
    <Abstract>Sets first Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aebb37c04fce43056ca2338cff6a3387d</Anchor>
    <Abstract>Gets the last Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>af6453f9b41930c5a00d293552a185b37</Anchor>
    <Abstract>Returns object as SectionStats. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adb2a2aca170f535875a513a7cf1c0b2d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a2022425618ee4205a187e29868184593</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a6c315e760a69b9e573ac5445b6afeca0</Anchor>
    <Abstract>Gets the backward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adeb5f9bbd6a130312910851d66f00f3d</Anchor>
    <Abstract>Gets the forward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abae10981b91779fe8c3864d9a5f0f6d1</Anchor>
    <Abstract>Adds backward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a00352c51a9873bc88cd8eac3edd5b860</Anchor>
    <Abstract>Adds forward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abadb2ebdd27e92e55049f0ae436096ab</Anchor>
    <Abstract>Delete backward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ac15a1719be16c8070705806311053980</Anchor>
    <Abstract>Delete forward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a7362c73900e067a4016ffb1a012e1e46</Anchor>
    <Abstract>Check if the node connects with the backward or the fordward neighbour sections and add the section t...</Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ab644e0a315cd87eb9054a7c5ca40e5c7</Anchor>
    <Abstract>Return the middle Nodes. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>afc711f8fb3346aa3f7245056dc5aff88</Anchor>
    <Abstract>Adds a node at the start of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aa28f449c9e1639f82a2fb2e0ad35b24f</Anchor>
    <Abstract>Adds a node at the end of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a19876923087b4445fb168c912bf427fc</Anchor>
    <Abstract>Gets the first Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a98e12fcd1446fe1cb842cc3f2fd1e73b</Anchor>
    <Abstract>Gets the last Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aad1c955878b8cd6f7e25d6cfe44e2b31</Anchor>
    <Abstract>Unique id. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a7f8a891edcc01c21c2b19459f1d74718</Anchor>
    <Abstract>Parent neurite of the section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a734421ce18effb11e0b0819645101253</Anchor>
    <Abstract>Container of the middle nodes of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_backwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a3567956d3db2e163631b9f9dba9b93fa</Anchor>
    <Abstract>Container of the backward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_forwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aaed70c00f198a70c256ab5cf034b8d65</Anchor>
    <Abstract>Container of the forward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuronMorphologySectionCachedStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuronMorphologySectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_cached_stats.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphologySectionCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_cached_stats.html</Path>
    <Anchor>a2defd0642dc11bacbb5d264e11569425</Anchor>
    <Abstract>Stats that can be cached for NeuronMorphologySectionStats. </Abstract>
    <DeclaredIn>NeuronMorphologySectionCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuronMorphologySectionCachedStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_cached_stats.html</Path>
    <Anchor>a5070ed72cbd14154e330194ad396610e</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuronMorphologySectionCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_cached_stats.html</Path>
    <Anchor>ab6087d0dafb9d80449974a9c26df962e</Anchor>
    <Abstract>Set dirty a cached stat and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuronMorphologySectionCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAndPropagateDirty</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_cached_stats.html</Path>
    <Anchor>a18efba937f362f8156252d04efcfb516</Anchor>
    <Abstract>Set dirty all cached stats and propagates dirty to parent neurite. </Abstract>
    <DeclaredIn>NeuronMorphologySectionCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_cached_stats.html</Path>
    <Anchor>addb84a22b47468a71be92125a01e3e0a</Anchor>
    <Abstract>Adds a node at the end of the section. </Abstract>
    <DeclaredIn>NeuronMorphologySectionCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionCachedStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_cached_stats.html</Path>
    <Anchor>a7b18c3b5a402583cf0be8a5adfd16293</Anchor>
    <Abstract>Sets first Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySectionCachedStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_stats.html</Path>
    <Anchor>a628a17bf9403640dd5bc92f2d9c6029f</Anchor>
    <Abstract>Returns object as SectionStats. </Abstract>
    <DeclaredIn>NeuronMorphologySectionStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphologySection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>ac888dcb7c03bf7011ad6941f7f480f4f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuronMorphologySection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>add85fa692ab96f97fe31688f487dfb90</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a46036e293a5a9186eede80cdd93af7b1</Anchor>
    <Abstract>Method to get the gid of the neuron morphology section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a42b0e85d5c80c2e91d7d59057ab686a1</Anchor>
    <Abstract>Method to set the gid of the neuron morphology section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a34ad79e8f31819f2ea48590c42045632</Anchor>
    <Abstract>Gets the parent Neurite of the Neuron Morphology Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a0c8ba49058f56db2b5f037bac766184f</Anchor>
    <Abstract>Sets the parent neurite of this Neuron Morphology Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a2d81aca4e63a55e4baa8fba858fe5b47</Anchor>
    <Abstract>Gets the parent Section of this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>acd3ee1bd1a49d8a368582f9e85f9a54b</Anchor>
    <Abstract>Sets the parent Section of this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>af030677d04be9c658e69945723e832fc</Anchor>
    <Abstract>Adds child Section to this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>abc31d472107d4609a7f6e721860fed7f</Anchor>
    <Abstract>Return the children sections. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a26edb3ce2d6d9e200b0971cad235c3cc</Anchor>
    <Abstract>Gets the first Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aebb37c04fce43056ca2338cff6a3387d</Anchor>
    <Abstract>Gets the last Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adb2a2aca170f535875a513a7cf1c0b2d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a2022425618ee4205a187e29868184593</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a6c315e760a69b9e573ac5445b6afeca0</Anchor>
    <Abstract>Gets the backward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adeb5f9bbd6a130312910851d66f00f3d</Anchor>
    <Abstract>Gets the forward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abae10981b91779fe8c3864d9a5f0f6d1</Anchor>
    <Abstract>Adds backward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a00352c51a9873bc88cd8eac3edd5b860</Anchor>
    <Abstract>Adds forward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abadb2ebdd27e92e55049f0ae436096ab</Anchor>
    <Abstract>Delete backward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ac15a1719be16c8070705806311053980</Anchor>
    <Abstract>Delete forward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a7362c73900e067a4016ffb1a012e1e46</Anchor>
    <Abstract>Check if the node connects with the backward or the fordward neighbour sections and add the section t...</Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ab644e0a315cd87eb9054a7c5ca40e5c7</Anchor>
    <Abstract>Return the middle Nodes. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>afc711f8fb3346aa3f7245056dc5aff88</Anchor>
    <Abstract>Adds a node at the start of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aa28f449c9e1639f82a2fb2e0ad35b24f</Anchor>
    <Abstract>Adds a node at the end of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a19876923087b4445fb168c912bf427fc</Anchor>
    <Abstract>Gets the first Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a98e12fcd1446fe1cb842cc3f2fd1e73b</Anchor>
    <Abstract>Gets the last Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aad1c955878b8cd6f7e25d6cfe44e2b31</Anchor>
    <Abstract>Unique id. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a7f8a891edcc01c21c2b19459f1d74718</Anchor>
    <Abstract>Parent neurite of the section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a734421ce18effb11e0b0819645101253</Anchor>
    <Abstract>Container of the middle nodes of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_backwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a3567956d3db2e163631b9f9dba9b93fa</Anchor>
    <Abstract>Container of the backward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_forwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aaed70c00f198a70c256ab5cf034b8d65</Anchor>
    <Abstract>Container of the forward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_values</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Cached&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Anchor>a2fd4f3362af9a0c519d6a23411e3350e</Anchor>
    <Abstract>Container of the cached values. Is mutable to allow const methods to modify the cache if needed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuronMorphologySectionStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuronMorphologySectionStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_stats.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySectionStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section_stats.html</Path>
    <Anchor>a628a17bf9403640dd5bc92f2d9c6029f</Anchor>
    <Abstract>Returns object as SectionStats. </Abstract>
    <DeclaredIn>NeuronMorphologySectionStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphologySection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>ac888dcb7c03bf7011ad6941f7f480f4f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~NeuronMorphologySection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>add85fa692ab96f97fe31688f487dfb90</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a46036e293a5a9186eede80cdd93af7b1</Anchor>
    <Abstract>Method to get the gid of the neuron morphology section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a42b0e85d5c80c2e91d7d59057ab686a1</Anchor>
    <Abstract>Method to set the gid of the neuron morphology section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a34ad79e8f31819f2ea48590c42045632</Anchor>
    <Abstract>Gets the parent Neurite of the Neuron Morphology Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a0c8ba49058f56db2b5f037bac766184f</Anchor>
    <Abstract>Sets the parent neurite of this Neuron Morphology Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a2d81aca4e63a55e4baa8fba858fe5b47</Anchor>
    <Abstract>Gets the parent Section of this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>acd3ee1bd1a49d8a368582f9e85f9a54b</Anchor>
    <Abstract>Sets the parent Section of this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addChild</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>af030677d04be9c658e69945723e832fc</Anchor>
    <Abstract>Adds child Section to this Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>children</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>abc31d472107d4609a7f6e721860fed7f</Anchor>
    <Abstract>Return the children sections. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>afe89e932f7a0db23e63b3a5c80ad91e0</Anchor>
    <Abstract>Adds a Node at the end of Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a26edb3ce2d6d9e200b0971cad235c3cc</Anchor>
    <Abstract>Gets the first Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aa0059b91f0b2cc63e37d13b432849b6a</Anchor>
    <Abstract>Sets first Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aebb37c04fce43056ca2338cff6a3387d</Anchor>
    <Abstract>Gets the last Node of the Section. </Abstract>
    <DeclaredIn>NeuronMorphologySection.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adb2a2aca170f535875a513a7cf1c0b2d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a2022425618ee4205a187e29868184593</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a6c315e760a69b9e573ac5445b6afeca0</Anchor>
    <Abstract>Gets the backward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adeb5f9bbd6a130312910851d66f00f3d</Anchor>
    <Abstract>Gets the forward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abae10981b91779fe8c3864d9a5f0f6d1</Anchor>
    <Abstract>Adds backward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a00352c51a9873bc88cd8eac3edd5b860</Anchor>
    <Abstract>Adds forward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abadb2ebdd27e92e55049f0ae436096ab</Anchor>
    <Abstract>Delete backward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ac15a1719be16c8070705806311053980</Anchor>
    <Abstract>Delete forward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a7362c73900e067a4016ffb1a012e1e46</Anchor>
    <Abstract>Check if the node connects with the backward or the fordward neighbour sections and add the section t...</Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ab644e0a315cd87eb9054a7c5ca40e5c7</Anchor>
    <Abstract>Return the middle Nodes. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>afc711f8fb3346aa3f7245056dc5aff88</Anchor>
    <Abstract>Adds a node at the start of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aa28f449c9e1639f82a2fb2e0ad35b24f</Anchor>
    <Abstract>Adds a node at the end of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a19876923087b4445fb168c912bf427fc</Anchor>
    <Abstract>Gets the first Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a98e12fcd1446fe1cb842cc3f2fd1e73b</Anchor>
    <Abstract>Gets the last Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>aad1c955878b8cd6f7e25d6cfe44e2b31</Anchor>
    <Abstract>Unique id. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_neurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::NeuronMorphologySection</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_section.html</Path>
    <Anchor>a7f8a891edcc01c21c2b19459f1d74718</Anchor>
    <Abstract>Parent neurite of the section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a734421ce18effb11e0b0819645101253</Anchor>
    <Abstract>Container of the middle nodes of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_backwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a3567956d3db2e163631b9f9dba9b93fa</Anchor>
    <Abstract>Container of the backward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_forwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aaed70c00f198a70c256ab5cf034b8d65</Anchor>
    <Abstract>Container of the forward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuronMorphologyStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuronMorphologyStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_stats.html</Path>
    <Abstract>This class allows to compute stats for sections. </Abstract>
    <DeclaredIn>NeuronMorphologyStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphologyStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology_stats.html</Path>
    <Anchor>a03049607f9dc2d3cc2c0d88f48294f1c</Anchor>
    <Abstract>Returns object as NeuronMorphologyStats. </Abstract>
    <DeclaredIn>NeuronMorphologyStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NeuronMorphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a9eec549930c7a62dc5b621a9b9c488c1</Anchor>
    <Abstract>Default Neuron class constructor. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>soma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a623496f80a4f6f4539edf69929434ccd</Anchor>
    <Abstract>Method to set the neuronal soma. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>ae17e7244522c1d4eb43dc71c14af7e73</Anchor>
    <Abstract>Method to add a new neurite to the neuron. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a473b24bf42349f9719f730291c68bbf9</Anchor>
    <Abstract>Method to get all the dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>basalDendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>af6df4ff3284339176ec79ebdfd717431</Anchor>
    <Abstract>Method to get all the basal dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apicalDendrites</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a9446d39435740f6a1b356f114b996271</Anchor>
    <Abstract>Method to get all the apical dendrites in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>apicalDendrite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>a3f81653ee6a9f5cd91882b2780deee1c</Anchor>
    <Abstract>Method to get the first apical dendrite. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>axons</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::NeuronMorphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neuron_morphology.html</Path>
    <Anchor>af65c1d879b4eea35fdda8b21a5e1e53d</Anchor>
    <Abstract>Method to get all the axons in a container. </Abstract>
    <DeclaredIn>NeuronMorphology.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_sections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Morphology</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_morphology.html</Path>
    <Anchor>a8a99efdec2d9d5880b5ea9f324e94228</Anchor>
    <Abstract>Morphology sections. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NeuronsMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NeuronsMap</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_neurons_map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Node</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Node</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Node</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node.html</Path>
    <Anchor>a16f9963793a795009ccde99390b3e1e4</Anchor>
    <Abstract>Set the node id. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Node</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node.html</Path>
    <Anchor>aa64417c3d40d09af4ab6efcb5efc66aa</Anchor>
    <Abstract>Get the node id. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::NodeCached</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::NodeCached</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node_cached.html</Path>
    <Abstract>Using this class with SectionCachedStats allows to dirty cached section stats when node&amp;#39;s radius or p...</Abstract>
    <DeclaredIn>NodeCached.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Node</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node.html</Path>
    <Anchor>a16f9963793a795009ccde99390b3e1e4</Anchor>
    <Abstract>Set the node id. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>id</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Node</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_node.html</Path>
    <Anchor>aa64417c3d40d09af4ab6efcb5efc66aa</Anchor>
    <Abstract>Get the node id. </Abstract>
    <DeclaredIn>Node.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_values</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Cached&lt;&gt;</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_cached.html</Path>
    <Anchor>a2fd4f3362af9a0c519d6a23411e3350e</Anchor>
    <Abstract>Container of the cached values. Is mutable to allow const methods to modify the cache if needed...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Nodes</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Nodes</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_nodes.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Object</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Object</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_object.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::ObjectWithProperties</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::ObjectWithProperties</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_object_with_properties.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Section</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adb2a2aca170f535875a513a7cf1c0b2d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Section</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a2022425618ee4205a187e29868184593</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a6c315e760a69b9e573ac5445b6afeca0</Anchor>
    <Abstract>Gets the backward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNeighbors</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>adeb5f9bbd6a130312910851d66f00f3d</Anchor>
    <Abstract>Gets the forward neighbour sections of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abae10981b91779fe8c3864d9a5f0f6d1</Anchor>
    <Abstract>Adds backward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a00352c51a9873bc88cd8eac3edd5b860</Anchor>
    <Abstract>Adds forward neighbour section to this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteBackwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>abadb2ebdd27e92e55049f0ae436096ab</Anchor>
    <Abstract>Delete backward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>deleteForwardNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ac15a1719be16c8070705806311053980</Anchor>
    <Abstract>Delete forward neighbour section from this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNeighbour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a7362c73900e067a4016ffb1a012e1e46</Anchor>
    <Abstract>Check if the node connects with the backward or the fordward neighbour sections and add the section t...</Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>ab644e0a315cd87eb9054a7c5ca40e5c7</Anchor>
    <Abstract>Return the middle Nodes. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addBackwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>afc711f8fb3346aa3f7245056dc5aff88</Anchor>
    <Abstract>Adds a node at the start of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addForwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aa28f449c9e1639f82a2fb2e0ad35b24f</Anchor>
    <Abstract>Adds a node at the end of this section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>backwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a19876923087b4445fb168c912bf427fc</Anchor>
    <Abstract>Gets the first Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>forwardNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a98e12fcd1446fe1cb842cc3f2fd1e73b</Anchor>
    <Abstract>Gets the last Node of the Section. </Abstract>
    <DeclaredIn>Section.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a734421ce18effb11e0b0819645101253</Anchor>
    <Abstract>Container of the middle nodes of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_backwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>a3567956d3db2e163631b9f9dba9b93fa</Anchor>
    <Abstract>Container of the backward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_forwardSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Section</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_section.html</Path>
    <Anchor>aaed70c00f198a70c256ab5cf034b8d65</Anchor>
    <Abstract>Container of the forward neighbour sections of this section. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Sections</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Sections</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_sections.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SegmentStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::SegmentStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_segment_stats.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Simplifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Simplifier</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_simplifier.html</Path>
    <Abstract>A singleton class to operate over morphologies. </Abstract>
    <DeclaredIn>Simplifier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>simplify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Simplifier</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_simplifier.html</Path>
    <Anchor>a835a25806ca661ddb4b9ceef515873eb</Anchor>
    <Abstract>Method to simplify the morphology given by the simplification function selected, the simplification c...</Abstract>
    <DeclaredIn>Simplifier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adaptSoma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Simplifier</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_simplifier.html</Path>
    <Anchor>ad41d5e4fe55525b59fdb3dcaba2f169e</Anchor>
    <Abstract>Method to correct the neuronal morphology to avoid errors in the generation of the neuronal soma mesh...</Abstract>
    <DeclaredIn>Simplifier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>adaptBifurcations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Simplifier</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_simplifier.html</Path>
    <Anchor>a0157462bd2e5d6528d04ad8ac646090d</Anchor>
    <Abstract>Method to correct the neuronal morphology to fix the intersecting bifurcations. </Abstract>
    <DeclaredIn>Simplifier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cutout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Simplifier</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_simplifier.html</Path>
    <Anchor>af2f11f7d423b0fd6f433e61273caab06</Anchor>
    <Abstract>Method to cutout the neuronal morphology based in the nodes importances. </Abstract>
    <DeclaredIn>Simplifier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>repairSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Simplifier</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_simplifier.html</Path>
    <Anchor>a9ee4347c374caf35f0f8ecd79531399c</Anchor>
    <Abstract>Method to repair morphological traces, deleting sections composed only by two nodes and whose distanc...</Abstract>
    <DeclaredIn>Simplifier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Instance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Simplifier</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_simplifier.html</Path>
    <Anchor>a1b15df10d5813a588e37de4d4340bfec</Anchor>
    <Abstract>Returns the instance of the singelton class. </Abstract>
    <DeclaredIn>Simplifier.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Soma</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Abstract>Class to represent the soma of neurons. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Soma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a3a860731c624b40179376fc455cae47b</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Soma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a2d9187a6012b4b4d80541f739ff61cab</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a8fb8e725fe4b512a04e6e4eac0db2881</Anchor>
    <Abstract>Method to get the center of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a5f9a90974a907b7695267e7a757f2508</Anchor>
    <Abstract>Method to get the container of nodes. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>ae5f36080c2d2f1558436570abe70f60f</Anchor>
    <Abstract>Method to get the max radius of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a7492e5e9b86e8daf55ded6a6ec177172</Anchor>
    <Abstract>Method to get the min radius of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meanRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>acfb97fbc3d9787b8ac61ae770531f8e1</Anchor>
    <Abstract>Method to get the mean radius of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a540afed616858657bfc461c0c263c989</Anchor>
    <Abstract>Method to set the center of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a1f26090e46683c07a19b24c54de89455</Anchor>
    <Abstract>Method to add a node to the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a1e49e36f1f8606d56e550d735c68628c</Anchor>
    <Abstract>Method to force the compute of the soma parameters (center and radii) </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>adf3df4825e75b6bbb91eea736ba389cd</Anchor>
    <Abstract>Center of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a414c55ff618fdab0020850106f2f55e4</Anchor>
    <Abstract>Container of nodes of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_maxRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a08c7fa7ca20e4fcf66f3c4cf1f13d6fd</Anchor>
    <Abstract>Maximum radius of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_minRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a300fbb8a7b3ea7c0338c1783436b0aad</Anchor>
    <Abstract>Minimum radius of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_meanRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a493295c68ac74854cfbae95bf0615e3d</Anchor>
    <Abstract>Mean radius of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SomaStats</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::SomaStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma_stats.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SomaStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::SomaStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma_stats.html</Path>
    <Anchor>a3d8fc3c2710cf69bff00cc8387c34622</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>SomaStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~SomaStats</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::SomaStats</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma_stats.html</Path>
    <Anchor>a5f13eaa57d90787e639bf3d78ec0a205</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>SomaStats.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Soma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a3a860731c624b40179376fc455cae47b</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Soma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a2d9187a6012b4b4d80541f739ff61cab</Anchor>
    <Abstract>Destructor. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a8fb8e725fe4b512a04e6e4eac0db2881</Anchor>
    <Abstract>Method to get the center of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a5f9a90974a907b7695267e7a757f2508</Anchor>
    <Abstract>Method to get the container of nodes. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>ae5f36080c2d2f1558436570abe70f60f</Anchor>
    <Abstract>Method to get the max radius of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>minRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a7492e5e9b86e8daf55ded6a6ec177172</Anchor>
    <Abstract>Method to get the min radius of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>meanRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>acfb97fbc3d9787b8ac61ae770531f8e1</Anchor>
    <Abstract>Method to get the mean radius of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a540afed616858657bfc461c0c263c989</Anchor>
    <Abstract>Method to set the center of the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addNode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a1f26090e46683c07a19b24c54de89455</Anchor>
    <Abstract>Method to add a node to the soma. </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeParams</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a1e49e36f1f8606d56e550d735c68628c</Anchor>
    <Abstract>Method to force the compute of the soma parameters (center and radii) </Abstract>
    <DeclaredIn>Soma.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_center</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>adf3df4825e75b6bbb91eea736ba389cd</Anchor>
    <Abstract>Center of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_nodes</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a414c55ff618fdab0020850106f2f55e4</Anchor>
    <Abstract>Container of nodes of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_maxRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a08c7fa7ca20e4fcf66f3c4cf1f13d6fd</Anchor>
    <Abstract>Maximum radius of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_minRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a300fbb8a7b3ea7c0338c1783436b0aad</Anchor>
    <Abstract>Minimum radius of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_meanRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Soma</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_soma.html</Path>
    <Anchor>a493295c68ac74854cfbae95bf0615e3d</Anchor>
    <Abstract>Mean radius of the soma. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Spine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Spine</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_spine.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SwcReaderTemplated</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>nsol::SwcReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_swc_reader_templated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::SwcReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_swc_reader_templated.html</Path>
    <Anchor>ae05736bbee7070d1e9fd0e4aeb26c502</Anchor>
    <Abstract>Creates a new Neuron that contains the NeuronMorphology described in SWC file Calls readMorphology( 2...</Abstract>
    <DeclaredIn>SwcReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMorphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::SwcReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_swc_reader_templated.html</Path>
    <Anchor>aa91c611d7048d7d1d00d39d00ee80091</Anchor>
    <Abstract>Creates a NeuronMorphology and loads info described in SWC file. </Abstract>
    <DeclaredIn>SwcReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ReadNeurite</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::SwcReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_swc_reader_templated.html</Path>
    <Anchor>a2b9b74f0f93f6575267c6346a1ef90b0</Anchor>
    <Abstract>Reads a Neurite from a processed SWC file, calls _ReadSection. </Abstract>
    <DeclaredIn>SwcReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_ReadSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::SwcReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_swc_reader_templated.html</Path>
    <Anchor>afb89dca5b60503ecb179eb9b70e108d9</Anchor>
    <Abstract>Creates and calculates sections, as well as bifurcation and branch counts. </Abstract>
    <DeclaredIn>SwcReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SwcReaderTemplated::TReadNeuriteStackElem</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::SwcReaderTemplated::TReadNeuriteStackElem</Scope>
    </TokenIdentifier>
    <Path>structnsol_1_1_swc_reader_templated_1_1_t_read_neurite_stack_elem.html</Path>
    <Abstract>Auxiliary elements to read branching neurite sections. </Abstract>
    <DeclaredIn>SwcReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SwcReaderTemplated::TSwcLine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::SwcReaderTemplated::TSwcLine</Scope>
    </TokenIdentifier>
    <Path>structnsol_1_1_swc_reader_templated_1_1_t_swc_line.html</Path>
    <Abstract>Contains processed information of an SWC line element. </Abstract>
    <DeclaredIn>SwcReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SwcWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::SwcWriter</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_swc_writer.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SwcWriter::TSwcLine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::SwcWriter::TSwcLine</Scope>
    </TokenIdentifier>
    <Path>structnsol_1_1_swc_writer_1_1_t_swc_line.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Synapse</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Abstract>A class to represent synapses. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a4ba31e16f138d6f1155d8cdd1873cf2e</Anchor>
    <Abstract>Default Synapse constructor. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>adc4a39a74ed432f01d06dc7037bc726e</Anchor>
    <Abstract>Copy constructor. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Synapse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ac01670285dde8138d80fe464faa21808</Anchor>
    <Abstract>Default destructor. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ad4260ff1384d1696ff75743a4fec6b11</Anchor>
    <Abstract>Method to get the gid of the presynaptic neuron. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ad4da3f321122f1db59a1e4da13d3d1b2</Anchor>
    <Abstract>Method to add a presynaptic neuron to the synapse. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ae4ee1b2a6ceaedae83d869124ce49ea5</Anchor>
    <Abstract>Method to get the gid of the postsynaptic neuron. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>ade78167bdbed82f2033865d7e1b90359</Anchor>
    <Abstract>Method to add a postsynaptic neuron to the synapse. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a654bbf46033fef519c6491be6de07425</Anchor>
    <Abstract>Method to set the synaptic weight. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>weight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>abafc0244647522496922b04f8e6cb2e1</Anchor>
    <Abstract>Method to get the synaptic weight. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator=</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a16487c87194c96d3473c4cc35d2513fe</Anchor>
    <Abstract>Operator =. </Abstract>
    <DeclaredIn>Synapse.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_preSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a34d6d7f8f62e3161077c7401d0e7e84a</Anchor>
    <Abstract>GID Presynaptic neuron. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_postSynapticNeuron</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>a9a87e64d755819fdee95c0c1f159474b</Anchor>
    <Abstract>GID Postsynaptic neuron. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_weight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>nsol::Synapse</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapse.html</Path>
    <Anchor>afd87526866e98c77db610ec3af447bc0</Anchor>
    <Abstract>The synaptic weight. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::SynapsesMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::SynapsesMap</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_synapses_map.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::VectorsReaderTemplated</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>nsol::VectorsReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_vectors_reader_templated.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadMorphology</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>nsol::VectorsReaderTemplated</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_vectors_reader_templated.html</Path>
    <Anchor>a13de8886e14eaff29a13bc53ec2f15c9</Anchor>
    <Abstract>Creates a generic morphology using a vector of points and segments. </Abstract>
    <DeclaredIn>VectorsReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::Version</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Abstract>Information about the current nsol version. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMajor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>aeb6008f44946f9e6133469b7c2507042</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getMinor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>a44e0746b60c20116c9b500d4580ee4cf</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPatch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>ac59f87843e5197c1fb75e98528a3c1ba</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>a291b283009471fd6abc758ee7bbaaf63</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>ae8ff0750aea8a6797c40d6710affbc7e</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getABI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>ac4341b28ff2ae25a703f3e3995981085</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRevString</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>a1ec3987b621d14dd76e438fd5e4cfd0f</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>check</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>ac3f6ad57df27748839df3db0e52c821b</Anchor>
    <Abstract>Runtime check for ABI compatibility. </Abstract>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSchema</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>aa77bac26f4443d2c54cbb88916dd4d89</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toJSON</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::Version</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_version.html</Path>
    <Anchor>aa1c5f35ed503f5fc88d53ef8db8969f1</Anchor>
    <DeclaredIn>version.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::XmlSceneReader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::XmlSceneReader</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_xml_scene_reader.html</Path>
    <DeclaredIn>XmlSceneReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadXml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::XmlSceneReader</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_xml_scene_reader.html</Path>
    <Anchor>ac929d917f8ab4a3650548299635950c1</Anchor>
    <Abstract>Read structure and optionally morphologies to xml file. </Abstract>
    <DeclaredIn>XmlSceneReader.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nsol::XmlSceneWriter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>nsol::XmlSceneWriter</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_xml_scene_writer.html</Path>
    <DeclaredIn>XmlSceneWriter.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToXml</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>nsol::XmlSceneWriter</Scope>
    </TokenIdentifier>
    <Path>classnsol_1_1_xml_scene_writer.html</Path>
    <Anchor>af6abb046550fc8643a1a4eada2cc01b7</Anchor>
    <Abstract>Write structure and optinally morphologies to xml file. </Abstract>
    <DeclaredIn>XmlSceneWriter.h</DeclaredIn>
  </Token>
</Tokens>
